using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using Windows.Foundation;
using Windows.Foundation.Collections;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Input;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Navigation;
using TopMovies.Views;
using System.Collections.ObjectModel;
using TopMovies.Common;
//using Common;
// The Blank Page item template is documented at http://go.microsoft.com/fwlink/?LinkId=234238
using Windows.Storage;


using System.Xml;
using System.Xml.Serialization;
using System.Text;
using System.Xml.Linq;
namespace TopMovies.Views
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class Movies : Page
    {
        StorageFile movieFile = null;
        string fileContent = "";
        private string[] _ids =
        {
            "1067", "2328", "2660", "1632", "2486", "2602", "2329", "2634",
            "2297", "1506", "2732", "1453", "1493", "1454", "1516", "1517",
            "1314", "1421", "1444", "1267", "1445", "1135", "1266", "1575",
            "1071", "1263", "1136", "1137", "1138", "1139", "1140", "1141",
            "2498", "1142", "1072", "2427", "1163", "1164", "1165", "1166",
            "1167", "1168", "2604", "1169", "1233", "1234", "1235", "1240",
            "1241", "1242", "1243", "1178", "1244", "1126", "1127", "1128",
            "1129", "1130", "1131", "1264", "1132", "1133", "1265", "1134",
            "1523", "1524", "2168", "1811", "1697", "1698", "1699", "1729",
            "1759", "1760", "2198", "2232"
        };

        private ObservableCollection<Person> images;

        public ObservableCollection<Person> Images
        {
            get { return images; }
            set { images = value; }
        }

        public Movies()
        {
            this.InitializeComponent();
            DataContext = new CoverFlowProperties();
        }

        /// <summary>
        /// Invoked when this page is about to be displayed in a Frame.
        /// </summary>
        /// <param name="e">Event data that describes how this page was reached.  The Parameter
        /// property is typically used to configure the page.</param>
        protected override void OnNavigatedTo(NavigationEventArgs e)
        {
            pageTitle.Text = "Movies";

            LoadMovieData();
            //var comics = new ObservableCollection<string>();
            //foreach (string id in _ids)
            //    comics.Add("http://wintellect-demo.com/services/mycomix.svc/cover240/" + id);

            //Images = new ObservableCollection<Person>();

            //for (int iCount = 1; iCount <= 24; iCount++)
            //{
            //    if (iCount == 10)
            //        continue;
            //    //images.Add(new Person() { Image = "ms-appx:///Assets/" + iCount + ".jpg", Name = "test" + iCount, Desp = "desp" + iCount });
            //    images.Add(new Person() { Image = "ms-appx:///Assets/" + iCount + ".jpg"});
            //}

            //CoverFlowControl.ItemsSource = Images;
            //CoverFlowControl.Offset = 50.0;
            //CoverFlowControl.SelectedItemOffset = 120.0;
            //CoverFlowControl.RotationAngle = 45.0;
            //CoverFlowControl.ZOffset = 30.0;
            //CoverFlowControl.ScaleOffset = 0.70;

           // DisplayInfo();
        }

        private async void LoadMovieData()
        {
            List<Person> list = new List<Person>();
            Windows.Storage.StorageFolder storageFolder = await Windows.ApplicationModel.Package.Current.InstalledLocation.GetFolderAsync("Xml");

            movieFile = await storageFolder.GetFileAsync("TopEnglish.xml");

            fileContent = await FileIO.ReadTextAsync(movieFile);

            XElement xe = XElement.Parse(fileContent);

            var query = (from movies in xe.Elements("movie")
                         select new Person
                         {
                             Name = movies.Element("name").Value,
                             Desp = movies.Element("desc").Value,
                             //Image = "ms-appx:///Assets/" + movies.Element("rank").Value + " - " + movies.Element("name").Value + ".jpg"
                             Image = "ms-appx:///Assets/" + movies.Element("rank").Value + ".jpg"
                         });

            Images = new ObservableCollection<Person>();

            foreach (Person p in query)
            {
                //list.Add(p);
                images.Add(new Person() { Image = p.Image, Name=p.Name + "#" + p.Desp});
                //images.Add(new Person() {p});
            }

            CoverFlowControl.ItemsSource = images;
            CoverFlowControl.Offset = 50.0;
            CoverFlowControl.SelectedItemOffset = 120.0;
            CoverFlowControl.RotationAngle = 45.0;
            CoverFlowControl.ZOffset = 30.0;
            CoverFlowControl.ScaleOffset = 0.70;
            DisplayInfo();
        }

        private void DisplayInfo()
        {
            string movieName = ((Person)(CoverFlowControl.Items[CoverFlowControl.SelectedIndex])).Name.Split('#')[0].ToString();
            txtName.Text = movieName;
            //txtDesp.Text = ((Person)(CoverFlowControl.Items[CoverFlowControl.SelectedIndex])).Name.Split('#')[1].ToString();

            movieWiki.Navigate(new Uri("http://en.m.wikipedia.org/wiki/" + movieName));
        }

        private void GoBack(object sender, RoutedEventArgs e)
        {
            // Use the navigation frame to return to the previous page
            if (this.Frame != null && this.Frame.CanGoBack) this.Frame.GoBack();
        }

        private void Options_Click(object sender, RoutedEventArgs e)
        {
            //ToggleSettings();
            stackpop.Visibility = Windows.UI.Xaml.Visibility.Visible;
        }

        public void ToggleSettings()
        {
            //SampleLayout element = SampleContent.Content as SampleLayout;
            //if (element.SelectedItem.SettingsContent != null)
            //{

            //    element.SelectedItem.IsSettingsOpen = !element.SelectedItem.IsSettingsOpen;

            //}
        }

        private void previous_Click_1(object sender, RoutedEventArgs e)
        {
            CoverFlowControl.MovePrevious();
            //DisplayInfo();
        }

        private void next_Click_1(object sender, RoutedEventArgs e)
        {
            CoverFlowControl.MoveNext();
            //DisplayInfo();
        }  

        private void btnClose_Click(object sender, RoutedEventArgs e)
        {
            stackpop.Visibility = Windows.UI.Xaml.Visibility.Collapsed;
        }

        private void CoverFlowControl_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            DisplayInfo();
        }
    }
}
