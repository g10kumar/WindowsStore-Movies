<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nsoftware.IPWorksSSL</name>
    </assembly>
    <members>
        <member name="T:nsoftware.IPWorksSSL.AtomsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.AtomsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.AtomsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.AtomsEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.AtomsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.AtomsHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.AtomsRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.AtomsSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.AtomsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.AtomsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.AtomsStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.AtomsStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.AtomsTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.SetAtomData(System.Byte[],System.Int32,System.Int32)">
            <summary>The complete content of the Atom resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.AddCookieAsync(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.AddNamespace(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.AddNamespaceAsync(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.DeleteResource(System.String)">
            <summary>Deletes the resource at the specified URL.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.DeleteResourceAsync(System.String)">
            <summary>Deletes the resource at the specified URL.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.GetFeed(System.String)">
            <summary>Fetches an Atom feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.GetFeedAsync(System.String)">
            <summary>Fetches an Atom feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.GetProperty(System.String)">
            <summary>Fetches the value of a specific Atom feed element or attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.GetPropertyAsync(System.String)">
            <summary>Fetches the value of a specific Atom feed element or attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.GetResource(System.String)">
            <summary>Fetches a resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.GetResourceAsync(System.String)">
            <summary>Fetches a resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.PostResource(System.String)">
            <summary>Posts a resource to the specified URL.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.PostResourceAsync(System.String)">
            <summary>Posts a resource to the specified URL.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.Put(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.PutAsync(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.PutResource(System.String)">
            <summary>Puts a resource to the specified URL.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.PutResourceAsync(System.String)">
            <summary>Puts a resource to the specified URL.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.ReadFile(System.String)">
            <summary>Load an Atom file into the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.ReadFileAsync(System.String)">
            <summary>Load an Atom file into the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.Reset">
            <summary>Reset all properties of the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.ResetAsync">
            <summary>Reset all properties of the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.SetProperty(System.String,System.String)">
            <summary>Sets the value of a specific Atom feed property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.SetPropertyAsync(System.String,System.String)">
            <summary>Sets the value of a specific Atom feed property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.WriteFile(System.String)">
            <summary>Write an Atom feed from the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Atoms.WriteFileAsync(System.String)">
            <summary>Write an Atom feed from the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Atoms.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Atoms.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Atoms.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Atoms.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Atoms.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Atoms.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Atoms.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Atoms.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Atoms.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Atoms.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Atoms.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Atoms.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Atoms.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Channel">
            <summary>The feed elements of a feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Entries">
            <summary>A collection of entries in the current Atom feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Namespaces">
            <summary>A collection of namespaces in the current namespace stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.UpdateEntry">
            <summary>An Atom entry to be updated, deleted or created.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.AtomDataB">
            <summary>The complete content of the Atom resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.AtomData">
            <summary>The complete content of the Atom resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.ContentType">
            <summary>Content type for posts and puts.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.IfModifiedSince">
            <summary>A date determining the maximum age of the desired document.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Slug">
            <summary>A header added to the HTTP request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.TransferredDataLimit">
            <summary>The maximum of bytes of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.UpdateFile">
            <summary>A resource to be updated, deleted or created.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Atoms.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsEventDetailsEventArgs">
            <summary>Event arguments for the EventDetails event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsFreeBusyEventArgs">
            <summary>Event arguments for the FreeBusy event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CaldavsTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.AddCookieAsync(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.AddCustomProperty(System.String,System.String)">
            <summary>Adds a form variable and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.AddCustomPropertyAsync(System.String,System.String)">
            <summary>Adds a form variable and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.CopyCalendarEvent(System.String,System.String)">
            <summary>Copy events to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.CopyCalendarEventAsync(System.String,System.String)">
            <summary>Copy events to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.CreateCalendar(System.String)">
            <summary>Creates a new calendar collection resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.CreateCalendarAsync(System.String)">
            <summary>Creates a new calendar collection resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.DeleteCalendarEvent(System.String)">
            <summary>Delete a resource or collection.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.DeleteCalendarEventAsync(System.String)">
            <summary>Delete a resource or collection.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.ExportICS">
            <summary>Generates an event from the properties in the iCal (.ICS) format.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.ExportICSAsync">
            <summary>Generates an event from the properties in the iCal (.ICS) format.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.GetCalendarEvent(System.String)">
            <summary>Retrieves a single event from the CalDAV server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.GetCalendarEventAsync(System.String)">
            <summary>Retrieves a single event from the CalDAV server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.GetCalendarOptions(System.String)">
            <summary>Retrieves options for the ResourceURI to determines whether it supports calendar access.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.GetCalendarOptionsAsync(System.String)">
            <summary>Retrieves options for the ResourceURI to determines whether it supports calendar access.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.GetCalendarReport(System.String)">
            <summary>Generates a report on the indicated calendar collection resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.GetCalendarReportAsync(System.String)">
            <summary>Generates a report on the indicated calendar collection resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.GetFreeBusyReport(System.String)">
            <summary>Generates a report as to when the calendar owner is free and/or busy.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.GetFreeBusyReportAsync(System.String)">
            <summary>Generates a report as to when the calendar owner is free and/or busy.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.ImportICS(System.String)">
            <summary>Imports iCal data (contained in an ICS file) into the component's property list.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.ImportICSAsync(System.String)">
            <summary>Imports iCal data (contained in an ICS file) into the component's property list.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.LockCalendar(System.String)">
            <summary>Obtain a lock for a specified calendar resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.LockCalendarAsync(System.String)">
            <summary>Obtain a lock for a specified calendar resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.MoveCalendarEvent(System.String,System.String)">
            <summary>Moves one calendar resource to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.MoveCalendarEventAsync(System.String,System.String)">
            <summary>Moves one calendar resource to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.PutCalendarEvent(System.String)">
            <summary>Adds a calendar resource at the specified ResourceURI using the CalDAV PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.PutCalendarEventAsync(System.String)">
            <summary>Adds a calendar resource at the specified ResourceURI using the CalDAV PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.ResetAsync">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.UnLockCalendar(System.String)">
            <summary>Unlocks a calendar resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Caldavs.UnLockCalendarAsync(System.String)">
            <summary>Unlocks a calendar resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnEventDetails">
            <summary>Fires for each calendar event received.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnFreeBusy">
            <summary>Fires for each Free/Busy element received in the response.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Caldavs.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Alarms">
            <summary>An alarm related to the event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.CustomProperties">
            <summary>List of extra properties that may be used to extend the functionality of this component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.FreeBusy">
            <summary>Specifies the times when the calendar owner is free or busy.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.LockProperties">
            <summary>Fields used when locking and unlocking a calendar resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Recurrence">
            <summary>Defines the recurrence set for the event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.ReportFilter">
            <summary>Criteria used to filter reports.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Timezone">
            <summary>Specifies a time zone on a calendar collection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Attendees">
            <summary>Defines one or more participants that have been invited to the event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Categories">
            <summary>Used to specify categories or subtypes of the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Classification">
            <summary>Defines the access classification for a calendar component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Completed">
            <summary>Date and time that a to-do was actually completed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Created">
            <summary>Date and time calendar information created.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Depth">
            <summary>The depth associated with the current operation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Description">
            <summary>Provides a complete description of the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.DisplayName">
            <summary>Provides the display name of the calendar being created.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Duration">
            <summary>Duration of the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.EndDate">
            <summary>Specifies the date and time that a calendar event ends.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.ETag">
            <summary>Identifier returned by the CalDAV server which is used to synchronize edits.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.EventType">
            <summary>Indicates the type of calendar object resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.LastModified">
            <summary>The date and time that the information associated with the calendar event was last revised in the calendar store.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Location">
            <summary>Defines the intended venue for the activity defined by a calendar component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Organizer">
            <summary>Defines the organizer of a calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Priority">
            <summary>Defines the relative priority for a calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Sequence">
            <summary>Defines the revision sequence number of the event within a sequence of revisions.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.StartDate">
            <summary>Specifies the date and time that an event begins.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Status">
            <summary>Defines the overall status or confirmation for the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Summary">
            <summary>Defines a short summary or subject for the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Timestamp">
            <summary>Specifies the date and time that the instance of the event was created.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.Transparency">
            <summary>Defines whether or not an event is transparent to busy time searches.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.UID">
            <summary>A persistent, globally unique  identifier for the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.URL">
            <summary>Location of the event resource on the CalDAV server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Caldavs.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CertmgrCertChainEventArgs">
            <summary>Event arguments for the CertChain event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CertmgrCertListEventArgs">
            <summary>Event arguments for the CertList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CertmgrErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CertmgrKeyListEventArgs">
            <summary>Event arguments for the KeyList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.CertmgrStoreListEventArgs">
            <summary>Event arguments for the StoreList event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.SetCertStore(System.Byte[],System.Int32,System.Int32)">
            <summary>The certificate store to search for certificates.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.CreateCertificate(System.String,System.Int32)">
            <summary>Creates a new self-signed certificate in the current store.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.CreateCertificateAsync(System.String,System.Int32)">
            <summary>Creates a new self-signed certificate in the current store.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.CreateKey(System.String)">
            <summary>Creates a new keyset associated with the provided name.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.CreateKeyAsync(System.String)">
            <summary>Creates a new keyset associated with the provided name.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.DeleteCertificate">
            <summary>Deletes the currently selected certificate from the store.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.DeleteCertificateAsync">
            <summary>Deletes the currently selected certificate from the store.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.DeleteKey(System.String)">
            <summary>Deletes the keyset associated with the provided name.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.DeleteKeyAsync(System.String)">
            <summary>Deletes the keyset associated with the provided name.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ExportCertificate(System.String,System.String)">
            <summary>Saves the current certificate to a PFX file.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ExportCertificateAsync(System.String,System.String)">
            <summary>Saves the current certificate to a PFX file.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.GenerateCSR(System.String,System.String)">
            <summary>Generates a new CSR to be sent to a signing authority.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.GenerateCSRAsync(System.String,System.String)">
            <summary>Generates a new CSR to be sent to a signing authority.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ImportCertificate(System.String,System.String,System.String)">
            <summary>Imports a certificate from a PFX file into the current certificate store.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ImportCertificateAsync(System.String,System.String,System.String)">
            <summary>Imports a certificate from a PFX file into the current certificate store.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ImportSignedCSR(System.Byte[],System.String)">
            <summary>Imports a signed CSR.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ImportSignedCSRAsync(System.Byte[],System.String)">
            <summary>Imports a signed CSR.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.IssueCertificate(System.String,System.Int32)">
            <summary>Creates a new certificate in the current store, signed by the selected certificate.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.IssueCertificateAsync(System.String,System.Int32)">
            <summary>Creates a new certificate in the current store, signed by the selected certificate.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ListCertificateStores">
            <summary>Lists certificate stores.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ListCertificateStoresAsync">
            <summary>Lists certificate stores.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ListKeys">
            <summary>List keysets in a CSP.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ListKeysAsync">
            <summary>List keysets in a CSP.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ListMachineStores">
            <summary>List machine certificate stores.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ListMachineStoresAsync">
            <summary>List machine certificate stores.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ListStoreCertificates">
            <summary>List certificates in a store.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ListStoreCertificatesAsync">
            <summary>List certificates in a store.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ReadCertificate(System.String)">
            <summary>Loads a certificate from a file.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ReadCertificateAsync(System.String)">
            <summary>Loads a certificate from a file.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.Reset">
            <summary>Resets all certificate properties to their default values.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ResetAsync">
            <summary>Resets all certificate properties to their default values.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.SaveCertificate(System.String)">
            <summary>Saves the current certificate to a file.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.SaveCertificateAsync(System.String)">
            <summary>Saves the current certificate to a file.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ShowCertificateChain">
            <summary>Show certificate chain.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.ShowCertificateChainAsync">
            <summary>Show certificate chain.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.SignCSR(System.Byte[],System.Int32)">
            <summary>Creates a signed certificate from a CSR.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certmgr.SignCSRAsync(System.Byte[],System.Int32)">
            <summary>Creates a signed certificate from a CSR.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certmgr.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Certmgr.OnCertChain">
            <summary>Shows the certificate chain for the certificate (see the ShowCertificateChain method).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Certmgr.OnCertList">
            <summary>Lists the certificates in a store (see the ListStoreCertificates method).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Certmgr.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Certmgr.OnKeyList">
            <summary>Lists the keysets in a CSP (see the ListKeys method).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Certmgr.OnStoreList">
            <summary>Lists the system certificate stores (see the ListCertificateStores and ListMachineStores methods).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certmgr.Cert">
            <summary>The current selected certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certmgr.CertExtensions">
            <summary>A list of extensions used by the currently selected certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certmgr.CertStoreB">
            <summary>The certificate store to search for certificates.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certmgr.CertStore">
            <summary>The certificate store to search for certificates.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certmgr.CertStorePassword">
            <summary>The password for the certificate store (if any).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certmgr.CertStoreType">
            <summary>The type of certificate store for CertStore.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FilemailersConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FilemailersEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FilemailersErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FilemailersPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FilemailersSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FilemailersSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FilemailersStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FilemailersTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.AddAttachment(System.String)">
            <summary>Adds FileName as an attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.AddAttachmentAsync(System.String)">
            <summary>Adds FileName as an attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.Connect">
            <summary>Connects to the mail relay and sends the SMTP HELO command.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.ConnectAsync">
            <summary>Connects to the mail relay and sends the SMTP HELO command.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.Disconnect">
            <summary>Disconnects from the SMTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.DisconnectAsync">
            <summary>Disconnects from the SMTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.ProcessQueue(System.String)">
            <summary>Sends the messages which have previously been queued into QueueDir.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.ProcessQueueAsync(System.String)">
            <summary>Sends the messages which have previously been queued into QueueDir.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.Queue(System.String)">
            <summary>Queues the message into QueueDir.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.QueueAsync(System.String)">
            <summary>Queues the message into QueueDir.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.ResetHeaders">
            <summary>Resets all the message headers to empty.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.ResetHeadersAsync">
            <summary>Resets all the message headers to empty.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.Send">
            <summary>Sends the current message and MIME encoded attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.SendAsync">
            <summary>Sends the current message and MIME encoded attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.SetMessageStream(Windows.Storage.Streams.IInputStream)">
            <summary>Sets the stream to be uploaded to the server as part of the message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Filemailers.SetMessageStreamAsync(Windows.Storage.Streams.IInputStream)">
            <summary>Sets the stream to be uploaded to the server as part of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Filemailers.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Filemailers.OnEndTransfer">
            <summary>Fired when the message text completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Filemailers.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Filemailers.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Filemailers.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Filemailers.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Filemailers.OnStartTransfer">
            <summary>Fired when the message text starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Filemailers.OnTransfer">
            <summary>Fired while the message text gets transferred to MailServer.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.Attachments">
            <summary>The paths of files to attach to the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.MessageRecipients">
            <summary>The collection of recipients of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.AuthMechanism">
            <summary>Used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.BCc">
            <summary>A comma separated list of addresses for blind carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.Cc">
            <summary>A comma separated list of addresses for carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.DeliveryNotificationTo">
            <summary>Email address to send to which to send a delivery notification.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.From">
            <summary>The email address of the sender (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.Importance">
            <summary>Importance of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.MailPort">
            <summary>The server port for SMTP (default 25).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.MailServer">
            <summary>The name or address of a mail server (mail relay).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.MessageDate">
            <summary>Date of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.MessageId">
            <summary>The Message Identifier for the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.MessageText">
            <summary>The full text of the message to send (without headers).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.OtherHeaders">
            <summary>An RFC 822 compliant string consisting of extra headers.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.Password">
            <summary>A password for logon to the MailServer.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.Priority">
            <summary>Priority of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.ReadReceiptTo">
            <summary>Email address to send a read receipt to.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.ReplyTo">
            <summary>A mail address to which to reply (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.SendTo">
            <summary>A comma separated list of addresses for destinations (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.Sensitivity">
            <summary>Sensitivity of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.Subject">
            <summary>The subject of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Filemailers.User">
            <summary>A user identifier to login as in the MailServer.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FtpsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FtpsDirListEventArgs">
            <summary>Event arguments for the DirList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FtpsEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FtpsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FtpsPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FtpsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FtpsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FtpsStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.FtpsTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.Abort">
            <summary>Abort Current Upload/Download.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.AbortAsync">
            <summary>Abort Current Upload/Download.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.Append">
            <summary>Append data from LocalFile to a RemoteFile on an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.AppendAsync">
            <summary>Append data from LocalFile to a RemoteFile on an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.DeleteFile(System.String)">
            <summary>Remove a file specified by FileName from an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.DeleteFileAsync(System.String)">
            <summary>Remove a file specified by FileName from an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.Download">
            <summary>Download a RemoteFile from an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.DownloadAsync">
            <summary>Download a RemoteFile from an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.ListDirectory">
            <summary>List the current directory specified by RemotePath on an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.ListDirectoryAsync">
            <summary>List the current directory specified by RemotePath on an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.ListDirectoryLong">
            <summary>List extended directory information for RemotePath.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.ListDirectoryLongAsync">
            <summary>List extended directory information for RemotePath.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.Logoff">
            <summary>Logoff from the FTP server by posting a QUIT command.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.LogoffAsync">
            <summary>Logoff from the FTP server by posting a QUIT command.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.Logon">
            <summary>Logon to the FTP RemoteHost using the current User and Password.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.LogonAsync">
            <summary>Logon to the FTP RemoteHost using the current User and Password.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.MakeDirectory(System.String)">
            <summary>Create a directory on an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.MakeDirectoryAsync(System.String)">
            <summary>Create a directory on an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.RemoveDirectory(System.String)">
            <summary>Remove a directory specified by DirName from an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.RemoveDirectoryAsync(System.String)">
            <summary>Remove a directory specified by DirName from an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.RenameFile(System.String)">
            <summary>Change the name of RemoteFile to NewName.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.RenameFileAsync(System.String)">
            <summary>Change the name of RemoteFile to NewName.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.SetDownloadStream(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the downloaded data from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.SetDownloadStreamAsync(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the downloaded data from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.SetUploadStream(Windows.Storage.Streams.IInputStream)">
            <summary>Sets the stream from which the component will read data to upload to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.SetUploadStreamAsync(Windows.Storage.Streams.IInputStream)">
            <summary>Sets the stream from which the component will read data to upload to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.StoreUnique">
            <summary>Upload a file with a Unique Name to an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.StoreUniqueAsync">
            <summary>Upload a file with a Unique Name to an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.Upload">
            <summary>Upload a file specified by LocalFile to an FTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ftps.UploadAsync">
            <summary>Upload a file specified by LocalFile to an FTP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ftps.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ftps.OnDirList">
            <summary>Fired when a directory entry is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ftps.OnEndTransfer">
            <summary>Fired when a file completes downloading/uploading.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ftps.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ftps.OnPITrail">
            <summary>Traces the commands sent to the server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ftps.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ftps.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ftps.OnStartTransfer">
            <summary>Fired when a file starts downloading/uploading.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ftps.OnTransfer">
            <summary>Fired during file download/upload.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.DirList">
            <summary>Collection of entries resulting in the last directory listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.Account">
            <summary>The user account to login with.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.FileExists">
            <summary>Returns True if the file specified by RemoteFile exists on the remote server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.FileSize">
            <summary>The size of the file pointed to by RemoteFile.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.FileTime">
            <summary>The last modification time of the file pointed to by RemoteFile.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.LocalFile">
            <summary>The path to a local file for download/upload.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.Overwrite">
            <summary>Indicates whether or not the component should overwrite files during transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.Passive">
            <summary>Controls whether to direct the server into passive mode.  Recommended if behind a firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.Password">
            <summary>The password to log in.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.RemoteFile">
            <summary>The name of the remote file for uploading, downloading, etc.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.RemoteHost">
            <summary>The domain name or IP address of the FTP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.RemotePath">
            <summary>The current path in the FTP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.RemotePort">
            <summary>The port for the FTP service (default is 21).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.StartByte">
            <summary>The byte index in RemoteFile and LocalFile from which to start the transmission.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.TransferMode">
            <summary>The transfer mode (ASCII or Binary).  If the value is 0 (default), the initial server mode will be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ftps.User">
            <summary>The user identifier to use for login.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HtmlmailersConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HtmlmailersEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HtmlmailersErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HtmlmailersPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HtmlmailersSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HtmlmailersSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HtmlmailersStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HtmlmailersTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.AddAttachment(System.String)">
            <summary>Adds FileName as an attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.AddAttachmentAsync(System.String)">
            <summary>Adds FileName as an attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.Connect">
            <summary>Connects to the mail relay and sends the SMTP HELO command.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.ConnectAsync">
            <summary>Connects to the mail relay and sends the SMTP HELO command.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.Disconnect">
            <summary>Disconnects from the SMTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.DisconnectAsync">
            <summary>Disconnects from the SMTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.ProcessQueue(System.String)">
            <summary>Sends the messages which have previously been queued into QueueDir.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.ProcessQueueAsync(System.String)">
            <summary>Sends the messages which have previously been queued into QueueDir.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.Queue(System.String)">
            <summary>Queues the message into QueueDir.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.QueueAsync(System.String)">
            <summary>Queues the message into QueueDir.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.ResetHeaders">
            <summary>Resets all the message headers to empty.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.ResetHeadersAsync">
            <summary>Resets all the message headers to empty.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.Send">
            <summary>Sends the current message and MIME encoded attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.SendAsync">
            <summary>Sends the current message and MIME encoded attachment.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.SetMessageHTMLStream(Windows.Storage.Streams.IInputStream)">
            <summary>Sets the stream from which the component will read the HTML version of the message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Htmlmailers.SetMessageHTMLStreamAsync(Windows.Storage.Streams.IInputStream)">
            <summary>Sets the stream from which the component will read the HTML version of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Htmlmailers.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Htmlmailers.OnEndTransfer">
            <summary>Fired when the message text completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Htmlmailers.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Htmlmailers.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Htmlmailers.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Htmlmailers.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Htmlmailers.OnStartTransfer">
            <summary>Fired when the message text starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Htmlmailers.OnTransfer">
            <summary>Fired while the message text gets transferred to MailServer.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.Attachments">
            <summary>The paths of files to attach to the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.Images">
            <summary>The embedded images in the HTML message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.MessageRecipients">
            <summary>The collection of recipients of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.AuthMechanism">
            <summary>Used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.BCc">
            <summary>A comma separated list of addresses for blind carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.Cc">
            <summary>A comma separated list of addresses for carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.DeliveryNotificationTo">
            <summary>Email address to send to which to send a delivery notification.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.From">
            <summary>The email address of the sender (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.HTMLFile">
            <summary>The path to a local HTML file.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.Importance">
            <summary>Importance of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.MailPort">
            <summary>The server port for SMTP (default 25).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.MailServer">
            <summary>The name or address of a mail server (mail relay).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.MessageDate">
            <summary>Date of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.MessageHTML">
            <summary>The HTML version of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.MessageId">
            <summary>The Message Identifier for the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.MessageText">
            <summary>The plain text version of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.OtherHeaders">
            <summary>An RFC 822 compliant string consisting of extra headers.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.ParseHTML">
            <summary>Controls the behavior of the MessageHTML property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.Password">
            <summary>A password for logon to the MailServer.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.Priority">
            <summary>Priority of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.ReadReceiptTo">
            <summary>Email address to send a read receipt to.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.ReplyTo">
            <summary>A mail address to which to reply (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.SendTo">
            <summary>A comma separated list of addresses for destinations (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.Sensitivity">
            <summary>Sensitivity of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.Subject">
            <summary>The subject of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Htmlmailers.User">
            <summary>A user identifier to login as in the MailServer.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HttpsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HttpsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HttpsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HttpsEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HttpsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HttpsHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HttpsRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HttpsSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HttpsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HttpsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HttpsStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HttpsStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.HttpsTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.SetPostData(System.Byte[],System.Int32,System.Int32)">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.AddCookieAsync(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.Delete(System.String)">
            <summary>Deletes an object on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.DeleteAsync(System.String)">
            <summary>Deletes an object on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.Get(System.String)">
            <summary>Fetch the document using the HTTP GET method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.GetAsync(System.String)">
            <summary>Fetch the document using the HTTP GET method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.Head(System.String)">
            <summary>Fetches the document headers using the HTTP HEAD method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.HeadAsync(System.String)">
            <summary>Fetches the document headers using the HTTP HEAD method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.Post(System.String)">
            <summary>Posts data to the HTTP server using the HTTP POST method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.PostAsync(System.String)">
            <summary>Posts data to the HTTP server using the HTTP POST method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.Put(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.PutAsync(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.ResetHeaders">
            <summary>Resets all HTTP Headers, Cookies, LocalFile , and AttachedFile.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.ResetHeadersAsync">
            <summary>Resets all HTTP Headers, Cookies, LocalFile , and AttachedFile.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.SetDownloadStream(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the downloaded data from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.SetDownloadStreamAsync(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the downloaded data from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.SetUploadStream(Windows.Storage.Streams.IInputStream)">
            <summary>Sets the stream to be uploaded to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Https.SetUploadStreamAsync(Windows.Storage.Streams.IInputStream)">
            <summary>Sets the stream to be uploaded to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Https.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Https.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Https.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Https.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Https.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Https.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Https.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Https.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Https.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Https.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Https.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Https.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Https.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.AllowHTTPCompression">
            <summary>Enables HTTP compression for receiving data.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.AttachedFile">
            <summary>A file to append to PostData if the POST or PUT methods are used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.ContentType">
            <summary>Content type for posts and puts.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.From">
            <summary>The email address of the HTTP agent (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.HTTPMethod">
            <summary>The HTTP method used for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.IfModifiedSince">
            <summary>A date determining the maximum age of the desired document.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.PostDataB">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.PostData">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.Pragma">
            <summary>A browser/server specific header line (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.Range">
            <summary>The byte-range to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.TransferredDataLimit">
            <summary>The maximum of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.URL">
            <summary>The URL to fetch.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.URLPath">
            <summary>The path for the URL.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.URLPort">
            <summary>The port for the URL.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.URLScheme">
            <summary>The scheme for the URL.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.URLServer">
            <summary>The server for the URL.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Https.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.ImapsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.ImapsEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.ImapsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.ImapsHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.ImapsMailboxACLEventArgs">
            <summary>Event arguments for the MailboxACL event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.ImapsMailboxListEventArgs">
            <summary>Event arguments for the MailboxList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.ImapsMessageInfoEventArgs">
            <summary>Event arguments for the MessageInfo event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.ImapsMessagePartEventArgs">
            <summary>Event arguments for the MessagePart event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.ImapsPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.ImapsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.ImapsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.ImapsStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.ImapsTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.SetMessage(System.Byte[],System.Int32,System.Int32)">
            <summary>Provides the raw message content.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.AddMessageFlags(System.String)">
            <summary>Adds the specified flags to the messages specified by MessageSet.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.AddMessageFlagsAsync(System.String)">
            <summary>Adds the specified flags to the messages specified by MessageSet.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.AppendToMailbox">
            <summary>Appends the message in MessageText to the mailbox specified by Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.AppendToMailboxAsync">
            <summary>Appends the message in MessageText to the mailbox specified by Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.CheckMailbox">
            <summary>Sends a 'CHECK' command to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.CheckMailboxAsync">
            <summary>Sends a 'CHECK' command to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.CloseMailbox">
            <summary>Removes all messages marked with 'Deleted' flag from the currently selected mailbox and unselect mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.CloseMailboxAsync">
            <summary>Removes all messages marked with 'Deleted' flag from the currently selected mailbox and unselect mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.Connect">
            <summary>Connects to an IMAP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.ConnectAsync">
            <summary>Connects to an IMAP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.CopyToMailbox">
            <summary>Copies the messages specified by MessageSet to the mailbox specified by Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.CopyToMailboxAsync">
            <summary>Copies the messages specified by MessageSet to the mailbox specified by Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.CreateMailbox">
            <summary>Creates a new mailbox specified by Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.CreateMailboxAsync">
            <summary>Creates a new mailbox specified by Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.DeleteFromMailbox">
            <summary>Marks the messages specified by MessageSet as deleted.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.DeleteFromMailboxAsync">
            <summary>Marks the messages specified by MessageSet as deleted.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.DeleteMailbox">
            <summary>Deletes a mailbox specified by Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.DeleteMailboxAsync">
            <summary>Deletes a mailbox specified by Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.DeleteMailboxACL(System.String)">
            <summary>Deletes mailbox access control rights for a specific user.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.DeleteMailboxACLAsync(System.String)">
            <summary>Deletes mailbox access control rights for a specific user.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.Disconnect">
            <summary>Disconnects from an IMAP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.DisconnectAsync">
            <summary>Disconnects from an IMAP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.ExamineMailbox">
            <summary>Selects a Mailbox (Read-only mode).</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.ExamineMailboxAsync">
            <summary>Selects a Mailbox (Read-only mode).</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.ExpungeMailbox">
            <summary>Removes all messages marked with 'Deleted' flag from the currently selected mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.ExpungeMailboxAsync">
            <summary>Removes all messages marked with 'Deleted' flag from the currently selected mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.FetchMessageHeaders">
            <summary>Retrieves the message headers of messages specified by the MessageSet property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.FetchMessageHeadersAsync">
            <summary>Retrieves the message headers of messages specified by the MessageSet property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.FetchMessageInfo">
            <summary>Retrieves information about messages specified by the MessageSet property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.FetchMessageInfoAsync">
            <summary>Retrieves information about messages specified by the MessageSet property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.FetchMessagePart(System.String)">
            <summary>Retrieves the message part specified by PartID.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.FetchMessagePartAsync(System.String)">
            <summary>Retrieves the message part specified by PartID.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.FetchMessagePartHeaders(System.String)">
            <summary>Retrieves the headers of message part specified by PartID.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.FetchMessagePartHeadersAsync(System.String)">
            <summary>Retrieves the headers of message part specified by PartID.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.FetchMessageText">
            <summary>Retrieves the message text of messages specified by the MessageSet property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.FetchMessageTextAsync">
            <summary>Retrieves the message text of messages specified by the MessageSet property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.GetMailboxACL">
            <summary>Retrieves mailbox access control rights.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.GetMailboxACLAsync">
            <summary>Retrieves mailbox access control rights.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.ListMailboxes">
            <summary>Lists all mailboxes matching all criteria in the Mailbox property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.ListMailboxesAsync">
            <summary>Lists all mailboxes matching all criteria in the Mailbox property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.ListSubscribedMailboxes">
            <summary>Lists all subscribed mailboxes matching all criteria in the Mailbox property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.ListSubscribedMailboxesAsync">
            <summary>Lists all subscribed mailboxes matching all criteria in the Mailbox property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.LocalizeDate(System.String)">
            <summary>Converts a valid RFC 822 message date to local date and time.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.LocalizeDateAsync(System.String)">
            <summary>Converts a valid RFC 822 message date to local date and time.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.MoveToMailbox">
            <summary>Moves the messages specified by MessageSet to the mailbox specified by Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.MoveToMailboxAsync">
            <summary>Moves the messages specified by MessageSet to the mailbox specified by Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.Noop">
            <summary>Sends a 'NOOP' command to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.NoopAsync">
            <summary>Sends a 'NOOP' command to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.RenameMailbox(System.String)">
            <summary>Change the name of Mailbox to NewName.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.RenameMailboxAsync(System.String)">
            <summary>Change the name of Mailbox to NewName.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.ResetMessageFlags">
            <summary>Replaces the flags of the messages specified by MessageSet with the flags specified by MessageFlags.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.ResetMessageFlagsAsync">
            <summary>Replaces the flags of the messages specified by MessageSet with the flags specified by MessageFlags.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.SearchMailbox(System.String)">
            <summary>Search selected mailbox for specified text.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.SearchMailboxAsync(System.String)">
            <summary>Search selected mailbox for specified text.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.SelectMailbox">
            <summary>Select a Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.SelectMailboxAsync">
            <summary>Select a Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.SetMailboxACL(System.String,System.String)">
            <summary>Sets mailbox access control rights for a specific user.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.SetMailboxACLAsync(System.String,System.String)">
            <summary>Sets mailbox access control rights for a specific user.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.SetMessageStream(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the message (or message part) downloaded from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.SetMessageStreamAsync(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the message (or message part) downloaded from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.SubscribeMailbox">
            <summary>Subscribes to the mailbox specified by Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.SubscribeMailboxAsync">
            <summary>Subscribes to the mailbox specified by Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.UnsetMessageFlags">
            <summary>Removes the flags specified by MessageFlags from the messages specified by MessageSet.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.UnsetMessageFlagsAsync">
            <summary>Removes the flags specified by MessageFlags from the messages specified by MessageSet.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.UnsubscribeMailbox">
            <summary>Unsubscribes from the mailbox specified by Mailbox.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Imaps.UnsubscribeMailboxAsync">
            <summary>Unsubscribes from the mailbox specified by Mailbox.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Imaps.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Imaps.OnEndTransfer">
            <summary>Fired when the message or the part data finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Imaps.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Imaps.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Imaps.OnMailboxACL">
            <summary>Fires for each set of access control rights returned by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Imaps.OnMailboxList">
            <summary>Fired for each mailbox received through the ListMailboxes and ListSubscribedMailboxes methods.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Imaps.OnMessageInfo">
            <summary>Fired with information for the message(s) retrieved by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Imaps.OnMessagePart">
            <summary>Fired for each message part when FetchMessageInfo is called.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Imaps.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Imaps.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Imaps.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Imaps.OnStartTransfer">
            <summary>Fired when the message or the part data starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Imaps.OnTransfer">
            <summary>Fired while the message gets transferred from the MailServer.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MailboxList">
            <summary>Collection of mailboxes listed by the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageHeaders">
            <summary>Collection of RFC822-encoded headers of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageInfo">
            <summary>Collection of messages retrieved by FetchMessageInfo.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageParts">
            <summary>Collection of message parts collected by FetchMessageInfo.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageRecipients">
            <summary>Collection of recipients for the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.AuthMechanism">
            <summary>The authentication mechanism to be used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.AutoDecodeParts">
            <summary>Determines whether to automatically decode message parts.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.Command">
            <summary>Can be used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.EndByte">
            <summary>The byte index of the position where the transfer should end.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.LocalFile">
            <summary>The path to a local file for downloading the message body.  If the file exists, it is overwritten (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.Mailbox">
            <summary>Name of the mailbox selected on the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MailboxFlags">
            <summary>Defines flags in the selected mailbox.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MailPort">
            <summary>The port of the IMAP server (default is 143).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MailServer">
            <summary>The name or address of the mail server (IMAP server).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageB">
            <summary>Provides the raw message content.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.Message">
            <summary>Provides the raw message content.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageContentEncoding">
            <summary>The ContentEncoding of the selected message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageContentType">
            <summary>The ContentType of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageCount">
            <summary>The total number of messages on the Mailbox.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageDate">
            <summary>The time the message was created.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageDeliveryTime">
            <summary>The time the message was delivered to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageFlags">
            <summary>Contains the flags of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageFrom">
            <summary>The address of the author of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageHeadersString">
            <summary>String version of RFC822-encoded headers of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageId">
            <summary>The message identifier of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageInReplyTo">
            <summary>The unique message identifier of the message this one is in reply to.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageNetId">
            <summary>The globally unique identifier of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageReplyTo">
            <summary>Email address(s) where replies to the message should be sent.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageSender">
            <summary>The address of the sender of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageSet">
            <summary>The set of messages to operate on.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageSize">
            <summary>The size of the selected message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageSubject">
            <summary>The subject of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.MessageText">
            <summary>The body of the retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.Overwrite">
            <summary>Indicates whether or not the component should overwrite files during transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.Password">
            <summary>The password used to authenticate to the MailServer.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.PeekMode">
            <summary>When set to True, the message Seen flag is not changed during reading.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.RecentMessageCount">
            <summary>Number of new messages in the Mailbox.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.SortCriteria">
            <summary>Sorts criteria to use for message retrieval operations.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.StartByte">
            <summary>The byte index of the position where the transfer should start.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.UIDMode">
            <summary>If true, permanent message identifiers are used instead of the default temporary identifiers.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.UIDValidity">
            <summary>The UIDValidity parameter sent from the server in response to SelectMailbox command.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Imaps.User">
            <summary>The user name used to authenticate to the MailServer.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpdaemonsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpdaemonsConnectionRequestEventArgs">
            <summary>Event arguments for the ConnectionRequest event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpdaemonsDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpdaemonsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpdaemonsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpdaemonsReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpdaemonsSSLClientAuthenticationEventArgs">
            <summary>Event arguments for the SSLClientAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpdaemonsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.SetDefaultEOL(System.Byte[],System.Int32,System.Int32)">
            <summary>A default EOL value to be used by incoming connections.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.Disconnect(System.String)">
            <summary>Disconnect the specified client.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.DisconnectAsync(System.String)">
            <summary>Disconnect the specified client.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.Interrupt(System.String)">
            <summary>Interrupts a synchronous send to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.InterruptAsync(System.String)">
            <summary>Interrupts a synchronous send to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.Send(System.String,System.Byte[])">
            <summary>Sends data to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.SendAsync(System.String,System.Byte[])">
            <summary>Sends data to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.SendFile(System.String,System.String)">
            <summary>Send file to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.SendFileAsync(System.String,System.String)">
            <summary>Send file to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.SendLine(System.String,System.String)">
            <summary>Sends a string followed by a newline.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.SendLineAsync(System.String,System.String)">
            <summary>Sends a string followed by a newline.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.Shutdown">
            <summary>Shuts down the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.ShutdownAsync">
            <summary>Shuts down the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.StartSSL(System.String)">
            <summary>Starts SSL negotiation on a connection.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipdaemons.StartSSLAsync(System.String)">
            <summary>Starts SSL negotiation on a connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipdaemons.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipdaemons.OnConnectionRequest">
            <summary>Fired when a request for connection comes from a remote host.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipdaemons.OnDataIn">
            <summary>Fired when data (complete lines) comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipdaemons.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipdaemons.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipdaemons.OnReadyToSend">
            <summary>Fired when the component is ready to send data.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipdaemons.OnSSLClientAuthentication">
            <summary>Fired when the client presents its credentials to the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipdaemons.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.Connections">
            <summary>A collection of currently connected clients.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.ConnectionBacklog">
            <summary>The maximum number of pending connections maintained by the TCP/IP subsystem.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.DefaultEOLB">
            <summary>A default EOL value to be used by incoming connections.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.DefaultEOL">
            <summary>A default EOL value to be used by incoming connections.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.DefaultMaxLineLength">
            <summary>The default maximum line length value for inbound connections.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.DefaultSingleLineMode">
            <summary>Tells the component whether or not to treat new connections as line-oriented.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.DefaultTimeout">
            <summary>An initial timeout value to be used by incoming connections.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.KeepAlive">
            <summary>When True, KEEPALIVE packets are enabled (for long connections).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.Linger">
            <summary>When set to True, connections are terminated gracefully.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.Listening">
            <summary>If True, the component accepts incoming connections on LocalPort.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.LocalPort">
            <summary>The TCP port in the local host where the component listens.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.SSLAuthenticateClients">
            <summary>If true, the server asks the client(s) for a certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipdaemons.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpportsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpportsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpportsDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpportsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpportsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpportsReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpportsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.IpportsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.SetDataToSend(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.SetEOL(System.Byte[],System.Int32,System.Int32)">
            <summary>Used to break the incoming data stream into chunks separated by EOL.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.Connect(System.String,System.Int32)">
            <summary>Connects to a remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.ConnectAsync(System.String,System.Int32)">
            <summary>Connects to a remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.Disconnect">
            <summary>Disconnects from the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.DisconnectAsync">
            <summary>Disconnects from the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.GetLine">
            <summary>Gets a line of text from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.GetLineAsync">
            <summary>Gets a line of text from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.Interrupt">
            <summary>Interrupts the current action.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.InterruptAsync">
            <summary>Interrupts the current action.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.Send(System.Byte[])">
            <summary>Sends data to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.SendAsync(System.Byte[])">
            <summary>Sends data to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.SendFile(System.String)">
            <summary>Sends file to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.SendFileAsync(System.String)">
            <summary>Sends file to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.SendLine(System.String)">
            <summary>Sends a string followed by a newline.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.SendLineAsync(System.String)">
            <summary>Sends a string followed by a newline.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.SetReceiveStream(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which received data will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.SetReceiveStreamAsync(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which received data will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.SetSendStream(Windows.Storage.Streams.IInputStream)">
            <summary>Reads content from the stream and sends it to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.SetSendStreamAsync(Windows.Storage.Streams.IInputStream)">
            <summary>Reads content from the stream and sends it to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.StartSSL">
            <summary>starts SSL negotiation on a plaintext connection.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ipports.StartSSLAsync">
            <summary>starts SSL negotiation on a plaintext connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipports.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipports.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipports.OnDataIn">
            <summary>Fired when data (complete lines) comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipports.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipports.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipports.OnReadyToSend">
            <summary>Fired when IPPort is ready to send data.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipports.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ipports.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.BytesSent">
            <summary>The number of bytes actually sent after an assignment to DataToSend.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.Connected">
            <summary>Triggers a connection or disconnection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.DataToSendB">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.DataToSend">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.EOLB">
            <summary>Used to break the incoming data stream into chunks separated by EOL.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.EOL">
            <summary>Used to break the incoming data stream into chunks separated by EOL.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.KeepAlive">
            <summary>When True, KEEPALIVE packets are enabled (for long connections).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.Linger">
            <summary>When set to True, connections are terminated gracefully.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.LocalPort">
            <summary>The TCP port in the local host where IPPort binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.RemoteHost">
            <summary>The address of the remote host.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.RemotePort">
            <summary>The TCP port in the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.SingleLineMode">
            <summary>Special mode for line-oriented protocols.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ipports.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsCharactersEventArgs">
            <summary>Event arguments for the Characters event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsEndElementEventArgs">
            <summary>Event arguments for the EndElement event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsIgnorableWhitespaceEventArgs">
            <summary>Event arguments for the IgnorableWhitespace event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsStartElementEventArgs">
            <summary>Event arguments for the StartElement event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.JsonsStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.SetPostData(System.Byte[],System.Int32,System.Int32)">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.SetTransferredData(System.Byte[],System.Int32,System.Int32)">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.AddCookieAsync(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.Delete(System.String)">
            <summary>Deletes an object on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.DeleteAsync(System.String)">
            <summary>Deletes an object on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.Get(System.String)">
            <summary>Fetches  the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.GetAsync(System.String)">
            <summary>Fetches  the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.HasXPath(System.String)">
            <summary>Determines whether a specific element exists in the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.HasXPathAsync(System.String)">
            <summary>Determines whether a specific element exists in the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.Input(System.String)">
            <summary>Provides input to the parser.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.InputAsync(System.String)">
            <summary>Provides input to the parser.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.ParseFile(System.String)">
            <summary>Loads a JSON file into the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.ParseFileAsync(System.String)">
            <summary>Loads a JSON file into the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.Post(System.String)">
            <summary>Posts data to the HTTP server using the HTTP POST method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.PostAsync(System.String)">
            <summary>Posts data to the HTTP server using the HTTP POST method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.Put(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.PutAsync(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.Reset">
            <summary>Resets the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Jsons.ResetAsync">
            <summary>Resets the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnCharacters">
            <summary>Fired for plain text segments of the input stream.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnEndElement">
            <summary>Fired when an end-element tag is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnIgnorableWhitespace">
            <summary>Fired when a section of ignorable whitespace is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnStartElement">
            <summary>Fired when a new element is encountered in the document.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Jsons.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.XChildren">
            <summary>Collection of child elements of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.BuildDOM">
            <summary>When True, an internal object model of the JSON document is created.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.ContentType">
            <summary>Content type for posts and puts.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.From">
            <summary>The email address of the HTTP agent (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.HTTPMethod">
            <summary>The HTTP method used for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.IfModifiedSince">
            <summary>A date determining the maximum age of the desired document.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.PostDataB">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.PostData">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.TransferredDataLimit">
            <summary>The maximum of bytes of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.URL">
            <summary>The URL to post information to.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.XElement">
            <summary>The name of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.XErrorPath">
            <summary>An XPath to check the server response for errors.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.XParent">
            <summary>The parent of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.XPath">
            <summary>Provides a way to point to a specific element in the response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.XSubTree">
            <summary>A snapshot of the current element in the document.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Jsons.XText">
            <summary>The text of the current element.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.LdapsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.LdapsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.LdapsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.LdapsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.LdapsExtendedResponseEventArgs">
            <summary>Event arguments for the ExtendedResponse event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.LdapsResultEventArgs">
            <summary>Event arguments for the Result event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.LdapsSearchCompleteEventArgs">
            <summary>Event arguments for the SearchComplete event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.LdapsSearchPageEventArgs">
            <summary>Event arguments for the SearchPage event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.LdapsSearchResultEventArgs">
            <summary>Event arguments for the SearchResult event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.LdapsSearchResultReferenceEventArgs">
            <summary>Event arguments for the SearchResultReference event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.LdapsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.LdapsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.Abandon(System.Int32)">
            <summary>Asks the server to abandon a request.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.AbandonAsync(System.Int32)">
            <summary>Asks the server to abandon a request.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.Add">
            <summary>Adds an entry specified by DN to the directory server using the type and value attributes defined in the Attributes properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.AddAsync">
            <summary>Adds an entry specified by DN to the directory server using the type and value attributes defined in the Attributes properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.Attr(System.String)">
            <summary>Returns the value of the specified LDAP attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.AttrAsync(System.String)">
            <summary>Returns the value of the specified LDAP attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.Bind">
            <summary>Connects and binds to the directory server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.BindAsync">
            <summary>Connects and binds to the directory server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.Compare">
            <summary>Compares attributes and values with those of the entry specified by DN.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.CompareAsync">
            <summary>Compares attributes and values with those of the entry specified by DN.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.Delete">
            <summary>Deletes an entry specified by DN from the directory server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.DeleteAsync">
            <summary>Deletes an entry specified by DN from the directory server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.ExtendedRequest(System.String,System.Byte[])">
            <summary>Performs an LDAP V3 Extended Operation.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.ExtendedRequestAsync(System.String,System.Byte[])">
            <summary>Performs an LDAP V3 Extended Operation.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.Modify">
            <summary>Performs an LDAP 'modify' operation on the entry specified by DN.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.ModifyAsync">
            <summary>Performs an LDAP 'modify' operation on the entry specified by DN.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.ModifyRDN(System.String)">
            <summary>Performs an LDAP 'modify RDN' operation an entry specified by DN.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.ModifyRDNAsync(System.String)">
            <summary>Performs an LDAP 'modify RDN' operation an entry specified by DN.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.MoveToDN(System.String)">
            <summary>Performs an LDAP 'modify' operation on the entry specified by DN by changing its superior.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.MoveToDNAsync(System.String)">
            <summary>Performs an LDAP 'modify' operation on the entry specified by DN by changing its superior.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.Search(System.String)">
            <summary>Searches the directory server using the base object specified in DN and the search filter SearchFilter.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.SearchAsync(System.String)">
            <summary>Searches the directory server using the base object specified in DN and the search filter SearchFilter.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.Unbind">
            <summary>Unbinds from the directory server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Ldaps.UnbindAsync">
            <summary>Unbinds from the directory server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ldaps.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ldaps.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ldaps.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ldaps.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ldaps.OnExtendedResponse">
            <summary>Fired for LDAP V3 Extended Responses.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ldaps.OnResult">
            <summary>Fired for every server response, except search responses.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ldaps.OnSearchComplete">
            <summary>Fired upon completion of a search operation.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ldaps.OnSearchPage">
            <summary>Fired for every page returned from a search operation.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ldaps.OnSearchResult">
            <summary>Fired for every entry returned from a search operation.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ldaps.OnSearchResultReference">
            <summary>Fired for every result reference returned from a search operation.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ldaps.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Ldaps.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.Attributes">
            <summary>Attributes for the current entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.References">
            <summary>Collection of references returned from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.AcceptData">
            <summary>Enables or disables data reception from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.AuthMechanism">
            <summary>The authentication mechanism to be used when connecting to the LDAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.DeleteOldRDN">
            <summary>Controls whether the old RDN (Relative Distinguished Name) should be deleted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.DN">
            <summary>The Distinguished Name used as the base for LDAP operations.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.LDAPVersion">
            <summary>The version of LDAP used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.MessageId">
            <summary>The message identifier for the next LDAP request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.PageSize">
            <summary>The maximum number of results per page for the Search method.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.Password">
            <summary>The password used to authenticate to the LDAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.ResultCode">
            <summary>The result code returned in the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.ResultDescription">
            <summary>The descriptive text returned in the last server response (if any).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.ResultDN">
            <summary>The Distinguished Name returned in the last server response (if any).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.SearchDerefAliases">
            <summary>Controls alias dereferencing during searching.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.SearchReturnValues">
            <summary>Controls whether the search operation returns values of  attributes, or only types.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.SearchScope">
            <summary>Controls the scope of LDAP search operations.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.SearchSizeLimit">
            <summary>Maximum number of entries that can be returned by the next search  operation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.SearchTimeLimit">
            <summary>A time limit for the next search operation (in seconds).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.ServerName">
            <summary>The name or address of the LDAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.ServerPort">
            <summary>The server port for the LDAP connection (default is 636).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.SortAttributes">
            <summary>A string of attribute names to sort on with optional relative matching rules.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Ldaps.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.NntpsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.NntpsEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.NntpsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.NntpsGroupListEventArgs">
            <summary>Event arguments for the GroupList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.NntpsGroupOverviewEventArgs">
            <summary>Event arguments for the GroupOverview event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.NntpsGroupSearchEventArgs">
            <summary>Event arguments for the GroupSearch event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.NntpsHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.NntpsPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.NntpsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.NntpsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.NntpsStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.NntpsTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.Connect">
            <summary>Connects to the news server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.ConnectAsync">
            <summary>Connects to the news server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.Disconnect">
            <summary>Disconnects from the news server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.DisconnectAsync">
            <summary>Disconnects from the news server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.FetchArticle">
            <summary>Get the headers and body of an article specified in CurrentArticle.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.FetchArticleAsync">
            <summary>Get the headers and body of an article specified in CurrentArticle.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.FetchArticleBody">
            <summary>Gets only the body of an article specified in CurrentArticle.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.FetchArticleBodyAsync">
            <summary>Gets only the body of an article specified in CurrentArticle.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.FetchArticleHeaders">
            <summary>Gets only the headers of an article specified in CurrentArticle.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.FetchArticleHeadersAsync">
            <summary>Gets only the headers of an article specified in CurrentArticle.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.GroupOverview">
            <summary>Receives an overview for the articles in range OverviewRange in the CurrentGroup.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.GroupOverviewAsync">
            <summary>Receives an overview for the articles in range OverviewRange in the CurrentGroup.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.GroupSearch">
            <summary>Receives an overview for the articles in range SearchRange in the CurrentGroup.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.GroupSearchAsync">
            <summary>Receives an overview for the articles in range SearchRange in the CurrentGroup.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.ListGroups">
            <summary>Lists all groups on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.ListGroupsAsync">
            <summary>Lists all groups on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.ListNewGroups">
            <summary>Lists all new groups on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.ListNewGroupsAsync">
            <summary>Lists all new groups on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.LocalizeDate(System.String)">
            <summary>Converts a valid RFC 822 message date to local date and time.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.LocalizeDateAsync(System.String)">
            <summary>Converts a valid RFC 822 message date to local date and time.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.PostArticle">
            <summary>Posts the current article and attached file.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.PostArticleAsync">
            <summary>Posts the current article and attached file.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.ResetHeaders">
            <summary>Resets all of the article headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.ResetHeadersAsync">
            <summary>Resets all of the article headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.SetArticleStream(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the article downloaded from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Nntps.SetArticleStreamAsync(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the article downloaded from the server will be written.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Nntps.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Nntps.OnEndTransfer">
            <summary>Fired when the article text completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Nntps.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Nntps.OnGroupList">
            <summary>Fired while group data transfers (during group listings).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Nntps.OnGroupOverview">
            <summary>Fired for each line of article overview data (during group overviews).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Nntps.OnGroupSearch">
            <summary>Fired for each line of group search data (during group searches).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Nntps.OnHeader">
            <summary>Fired for every article header being retrieved during article retrieval.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Nntps.OnPITrail">
            <summary>Traces the commands sent to the news server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Nntps.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Nntps.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Nntps.OnStartTransfer">
            <summary>Fired when the article text starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Nntps.OnTransfer">
            <summary>Fired while the article text gets transferred (to or from the NewsServer ).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.ArticleList">
            <summary>Collection of articles collected through GroupOverview or GroupSearch.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.GroupList">
            <summary>Collection of newsgroups listed by ListGroups or ListNewGroups.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.ParsedHeaders">
            <summary>A collection of headers returned from the last article retrieval.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.ArticleCount">
            <summary>The estimated number of articles in CurrentGroup.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.ArticleDate">
            <summary>The date of the current article.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.ArticleFrom">
            <summary>The email address of the author (for posting articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.ArticleHeaders">
            <summary>The full headers of the article as retrieved from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.ArticleId">
            <summary>The message identifier of the current article.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.ArticleReferences">
            <summary>Articles to which the posted article follows up.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.ArticleReplyTo">
            <summary>The address to reply to (for posting articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.ArticleSubject">
            <summary>The article subject (for posted articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.ArticleText">
            <summary>The full text of the article (without the headers).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.AttachedFile">
            <summary>A file name which the contents of will be appended to the ArticleText when posting articles.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.CheckDate">
            <summary>The date (format YYMMDD HHMMSS) to check for creation of new groups. If the group was created after the date specified, it is considered new.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.CurrentArticle">
            <summary>The number or message identifier of the current article.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.CurrentGroup">
            <summary>The name of the current group.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.FirstArticle">
            <summary>The number of the first article in CurrentGroup.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.LastArticle">
            <summary>The number of the last article in CurrentGroup.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.LocalFile">
            <summary>The path to a local file for downloading the article body.  If the file exists, it is overwritten (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.MaxLines">
            <summary>The maximum number of message lines aside from headers to retrieve.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.Newsgroups">
            <summary>A comma separated list of newsgroups in which to post the article.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.NewsPort">
            <summary>The server port for secure NNTP (default 563).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.NewsServer">
            <summary>The name or address of a news server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.Organization">
            <summary>The organization of the author (for posting articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.OtherHeaders">
            <summary>An RFC850 compliant string consisting of extra headers (for posting articles).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.OverviewRange">
            <summary>A range for the GroupOverview method (first-last).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.Password">
            <summary>A logon password for the NewsServer.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.SearchHeader">
            <summary>A header for the GroupSearch method.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.SearchPattern">
            <summary>A search pattern for the GroupSearch method.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.SearchRange">
            <summary>A range for the GroupSearch method (first-last).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Nntps.User">
            <summary>A user identifier to login as in the NewsServer.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthLaunchBrowserEventArgs">
            <summary>Event arguments for the LaunchBrowser event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthReturnURLEventArgs">
            <summary>Event arguments for the ReturnURL event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OauthTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.SetPostData(System.Byte[],System.Int32,System.Int32)">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.AddCookieAsync(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.AddParam(System.String,System.String)">
            <summary>Adds a name-value pair to the query string parameters of outgoing request.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.AddParamAsync(System.String,System.String)">
            <summary>Adds a name-value pair to the query string parameters of outgoing request.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.GetAuthorization">
            <summary>Gets the authorization string required to access the protected resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.GetAuthorizationAsync">
            <summary>Gets the authorization string required to access the protected resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.GetAuthorizationURL">
            <summary>Builds and returns the URL to which the user should be re-directed for authorization.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.GetAuthorizationURLAsync">
            <summary>Builds and returns the URL to which the user should be re-directed for authorization.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.ResetAsync">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.StartWebServer">
            <summary>Starts the embedded web server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.StartWebServerAsync">
            <summary>Starts the embedded web server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.StopWebServer">
            <summary>Stops the embedded web server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Oauth.StopWebServerAsync">
            <summary>Stops the embedded web server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnLaunchBrowser">
            <summary>Fires before launching a browser with the authorization URL.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnReturnURL">
            <summary>Fires when the user is redirected to the embedded web server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Oauth.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.Params">
            <summary>The parameters to be included in the request to the authorization server, or received in the response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.AccessToken">
            <summary>The access token returned by the authorization server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.AllowHTTPCompression">
            <summary>Enables HTTP compression for receiving data.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.AuthorizationCode">
            <summary>The authorization code that is exchanged for an access token.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.AuthorizationScope">
            <summary>The scope request or response parameter used during authorization.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.ClientId">
            <summary>The id of the client assigned when registering the application.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.ClientProfile">
            <summary>The type of client that is requesting authorization.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.ClientSecret">
            <summary>The secret value for the client assigned when registering the application.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.ContentType">
            <summary>Content type for posts and puts.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.From">
            <summary>The email address of the HTTP agent (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.HTTPMethod">
            <summary>The HTTP method used for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.IfModifiedSince">
            <summary>A date determining the maximum age of the desired document.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.PostDataB">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.PostData">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.Pragma">
            <summary>A browser/server specific header line (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.Range">
            <summary>The byte-range to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.RefreshToken">
            <summary>Specifies the refresh token received from or sent to the authorization server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.ReturnURL">
            <summary>The URL where the user (browser) returns after authenticating.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.ServerAuthURL">
            <summary>The URL of the authorization server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.ServerTokenURL">
            <summary>The URL used to obtain the access token.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.TransferredDataLimit">
            <summary>The maximum of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Oauth.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasEntityEventArgs">
            <summary>Event arguments for the Entity event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasEntryEventArgs">
            <summary>Event arguments for the Entry event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasPropertyEventArgs">
            <summary>Event arguments for the Property event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.OdatasTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.CreateEntry">
            <summary>Creates a new entry within the specified OData service resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.CreateEntryAsync">
            <summary>Creates a new entry within the specified OData service resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.CustomRequest(System.String,System.String,System.String)">
            <summary>Sends a request to the specified URL using the HTTP Method and Post Data provided.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.CustomRequestAsync(System.String,System.String,System.String)">
            <summary>Sends a request to the specified URL using the HTTP Method and Post Data provided.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.DeleteEntry">
            <summary>Deletes an entry within an OData service resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.DeleteEntryAsync">
            <summary>Deletes an entry within an OData service resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.GetEntryProperty(System.String)">
            <summary>Get an OData entry property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.GetEntryPropertyAsync(System.String)">
            <summary>Get an OData entry property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.GetSchema">
            <summary>Retrieves the schema for a service.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.GetSchemaAsync">
            <summary>Retrieves the schema for a service.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.HasXPath(System.String)">
            <summary>Determines whether a specific element exists in the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.HasXPathAsync(System.String)">
            <summary>Determines whether a specific element exists in the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.QueryService">
            <summary>Queries an OData service using the specified parameters.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.QueryServiceAsync">
            <summary>Queries an OData service using the specified parameters.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.Reset">
            <summary>Reset all properties of the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.ResetAsync">
            <summary>Reset all properties of the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.SetEntryProperty(System.String,System.String)">
            <summary>Set an OData entry property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.SetEntryPropertyAsync(System.String,System.String)">
            <summary>Set an OData entry property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.SetSchemaEntity(System.String)">
            <summary>Sets the schema entity.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.SetSchemaEntityAsync(System.String)">
            <summary>Sets the schema entity.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.SetSchemaProperty(System.String)">
            <summary>Sets the schema property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.SetSchemaPropertyAsync(System.String)">
            <summary>Sets the schema property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.SetSchemaType(System.String)">
            <summary>Sets the schema type.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.SetSchemaTypeAsync(System.String)">
            <summary>Sets the schema type.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.UpdateEntry">
            <summary>Update an OData entry.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.UpdateEntryAsync">
            <summary>Update an OData entry.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.UpdateProperty(System.String,System.String)">
            <summary>Update an OData entry property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Odatas.UpdatePropertyAsync(System.String,System.String)">
            <summary>Update an OData entry property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnEntity">
            <summary>Fired once for each entity retrieved.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnEntry">
            <summary>Fired once for each entry retrieved.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnProperty">
            <summary>Fired once for each property found within an entity.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Odatas.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.Channel">
            <summary>The feed elements of a feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.EntryLinks">
            <summary>A collection of links in the current OData entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.EntryProperties">
            <summary>A collection of elements in the current OData entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SchemaAssociation">
            <summary>The navigation properties and their corresponding associations contained within an entity of a service schema.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SchemaEntity">
            <summary>The entities contained within a service schema.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SchemaProperty">
            <summary>The properties contained within an entity of a service schema.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SchemaTypeField">
            <summary>The fields (properties) contained within a complex type.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.XAttributes">
            <summary>A collection of attributes of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.XChildren">
            <summary>Collection of child elements of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.EntryAuthor">
            <summary>The Author of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.EntryCount">
            <summary>The number of entries contained within an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.EntryETag">
            <summary>The ETag of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.EntryId">
            <summary>The ID of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.EntryIndex">
            <summary>The index of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.EntrySummary">
            <summary>The Summary of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.EntryTitle">
            <summary>The Title of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.EntryUpdated">
            <summary>The Date-Time when current entry in an OData feed was updated.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.EntryXML">
            <summary>The raw XML of the current entry in an OData feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.OtherQueryOptions">
            <summary>Additional Query Options to be used when querying a service.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.QueryFilter">
            <summary>Selects only the entries that satisfy the specified filter (expression).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.QueryOrderBy">
            <summary>The value used to order entries when querying a service.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.QuerySelect">
            <summary>Selects only the specified properties to be returned in an entry when querying a service.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.QuerySkip">
            <summary>The number of entries to skip when querying a service.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.QuerySkipToken">
            <summary>Token given by an OData server when the last query result collection is too large.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.QueryTop">
            <summary>Selects the first N entries when querying a service.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.ResourcePath">
            <summary>The Resource Path of an OData service.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SchemaAssociationCount">
            <summary>The number of navigation properties contained within an OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SchemaAssociationIndex">
            <summary>The index of the current navigation property in an OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SchemaEntityCount">
            <summary>The number of entities contained within an OData schema.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SchemaEntityIndex">
            <summary>The index of the current entity in an OData schema.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SchemaKeys">
            <summary>The keys of a schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SchemaPropertyCount">
            <summary>The number of properties contained within an OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SchemaPropertyIndex">
            <summary>The index of the current property in an OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SchemaTypeFieldCount">
            <summary>The number of properties contained within an OData schema complex type.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.SchemaTypeFieldIndex">
            <summary>The index of the current field (property) in an OData schema complex type.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.ServiceRootURI">
            <summary>The root URI of an OData service.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.XElement">
            <summary>The name of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.XNamespace">
            <summary>The namespace of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.XParent">
            <summary>The parent of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.XPath">
            <summary>Provides a way to point to a specific element in the document.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.XPrefix">
            <summary>The prefix of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.XSubTree">
            <summary>A snapshot of the current element in the document.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Odatas.XText">
            <summary>The text of the current element.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.PopsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.PopsEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.PopsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.PopsHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.PopsMessageListEventArgs">
            <summary>Event arguments for the MessageList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.PopsPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.PopsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.PopsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.PopsStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.PopsTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.Connect">
            <summary>Connects to the mail server and attempts to login.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.ConnectAsync">
            <summary>Connects to the mail server and attempts to login.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.Delete">
            <summary>Deletes a message specified by MessageNumber on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.DeleteAsync">
            <summary>Deletes a message specified by MessageNumber on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.Disconnect">
            <summary>Disconnects from the mail server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.DisconnectAsync">
            <summary>Disconnects from the mail server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.ListMessageSizes">
            <summary>Retrieves a list of all message sizes from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.ListMessageSizesAsync">
            <summary>Retrieves a list of all message sizes from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.ListMessageUIDs">
            <summary>Retrieves a list of all message UIDs from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.ListMessageUIDsAsync">
            <summary>Retrieves a list of all message UIDs from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.LocalizeDate(System.String)">
            <summary>Converts a valid RFC 822 message date to local date and time.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.LocalizeDateAsync(System.String)">
            <summary>Converts a valid RFC 822 message date to local date and time.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.Reset">
            <summary>Resets all changes and revert back to the state when the user first connected.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.ResetAsync">
            <summary>Resets all changes and revert back to the state when the user first connected.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.Retrieve">
            <summary>Retrieves a message specified by MessageNumber from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.RetrieveAsync">
            <summary>Retrieves a message specified by MessageNumber from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.RetrieveHeaders">
            <summary>Retrieves headers for a message specified by MessageNumber.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.RetrieveHeadersAsync">
            <summary>Retrieves headers for a message specified by MessageNumber.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.SetMessageStream(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the message downloaded from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Pops.SetMessageStreamAsync(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the message downloaded from the server will be written.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Pops.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Pops.OnEndTransfer">
            <summary>Fired when the message completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Pops.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Pops.OnHeader">
            <summary>Fired for every message header being retrieved.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Pops.OnMessageList">
            <summary>Fired for every message listed by ListMessageSizes and/or ListMessageUIDs.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Pops.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Pops.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Pops.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Pops.OnStartTransfer">
            <summary>Fired when the message starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Pops.OnTransfer">
            <summary>Fired while the message gets transferred from MailServer.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageHeaders">
            <summary>Collection of the message headers as retrieved from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageRecipients">
            <summary>A collection of recipients for the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.AuthMechanism">
            <summary>The authentication mechanism to be used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.IncludeHeaders">
            <summary>Instructs the component to include the headers in the MessageText and LocalFile.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.LocalFile">
            <summary>The path to a local file for downloading the message body.  If the file exists, it is overwritten (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MailPort">
            <summary>The server port for POP (default 110).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MailServer">
            <summary>The name or address of a mail server (internet post office server).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MaxLines">
            <summary>The maximum number of message lines besides headers to retrieve.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageB">
            <summary>Provides the raw message content.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.Message">
            <summary>Provides the raw message content.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageCc">
            <summary>The value of the CC header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageCount">
            <summary>The number of messages waiting in the mailbox.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageDate">
            <summary>The value of the date header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageFrom">
            <summary>The value of the from header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageHeadersString">
            <summary>A string representation of the full headers of the message as retrieved from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageNumber">
            <summary>Current (selected) message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageReplyTo">
            <summary>The value of the Reply-To header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageSize">
            <summary>The size in bytes of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageSubject">
            <summary>The value of the Subject header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageText">
            <summary>The full text of the message as retrieved from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageTo">
            <summary>The value of the To header of the last retrieved message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.MessageUID">
            <summary>The unique identifier of the message as specified by the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.Password">
            <summary>The password for the mailbox user.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.TotalSize">
            <summary>Cumulative size in bytes of messages in the mailbox (including headers).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Pops.User">
            <summary>The user identifier for the mailbox.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsCharactersEventArgs">
            <summary>Event arguments for the Characters event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsCommentEventArgs">
            <summary>Event arguments for the Comment event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsEndElementEventArgs">
            <summary>Event arguments for the EndElement event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsEndPrefixMappingEventArgs">
            <summary>Event arguments for the EndPrefixMapping event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsEvalEntityEventArgs">
            <summary>Event arguments for the EvalEntity event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsIgnorableWhitespaceEventArgs">
            <summary>Event arguments for the IgnorableWhitespace event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsMetaEventArgs">
            <summary>Event arguments for the Meta event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsPIEventArgs">
            <summary>Event arguments for the PI event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsSpecialSectionEventArgs">
            <summary>Event arguments for the SpecialSection event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsStartElementEventArgs">
            <summary>Event arguments for the StartElement event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsStartPrefixMappingEventArgs">
            <summary>Event arguments for the StartPrefixMapping event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RestsStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.SetPostData(System.Byte[],System.Int32,System.Int32)">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.AddCookieAsync(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.Attr(System.String)">
            <summary>Returns the value of the specified attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.AttrAsync(System.String)">
            <summary>Returns the value of the specified attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.Delete(System.String)">
            <summary>Deletes an object on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.DeleteAsync(System.String)">
            <summary>Deletes an object on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.Get(System.String)">
            <summary>Fetches the document using the HTTP GET method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.GetAsync(System.String)">
            <summary>Fetches the document using the HTTP GET method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.HasXPath(System.String)">
            <summary>Determines whether a specific element exists in the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.HasXPathAsync(System.String)">
            <summary>Determines whether a specific element exists in the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.Post(System.String)">
            <summary>Posts data to the HTTP server using the HTTP POST method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.PostAsync(System.String)">
            <summary>Posts data to the HTTP server using the HTTP POST method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.Put(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.PutAsync(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.Reset">
            <summary>Resets the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rests.ResetAsync">
            <summary>Resets the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnCharacters">
            <summary>Fired for plain text segments of the input stream.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnComment">
            <summary>Fired when a comment section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnEndElement">
            <summary>Fired when an end-element tag is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnEndPrefixMapping">
            <summary>Fired when leaving the scope of a namespace declaration.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnEvalEntity">
            <summary>Fired every time an entity needs to be evaluated.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnIgnorableWhitespace">
            <summary>Fired when a section of ignorable whitespace is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnMeta">
            <summary>Fired when a meta section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnPI">
            <summary>Fired when a processing instruction section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnSpecialSection">
            <summary>Fired when a special section is encountered.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnStartElement">
            <summary>Fired when a begin-element tag is encountered in the document.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnStartPrefixMapping">
            <summary>Fired when entering the scope of a namespace declaration.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rests.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.Namespaces">
            <summary>A collection of namespaces in the current stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.XAttributes">
            <summary>A collection of attributes of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.XChildren">
            <summary>Collection of child elements of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.BuildDOM">
            <summary>When True, an internal object model of the XML document is created.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.ContentType">
            <summary>Content type for posts and puts.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.From">
            <summary>The email address of the HTTP agent (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.HTTPMethod">
            <summary>The HTTP method used for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.IfModifiedSince">
            <summary>A date determining the maximum age of the desired document.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.PostDataB">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.PostData">
            <summary>The data to post with the URL if the POST method is used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.TransferredDataLimit">
            <summary>The maximum of bytes of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.URL">
            <summary>The URL to which information is posted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.Validate">
            <summary>When True, the parser checks that the document consists of well-formed XML.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.XElement">
            <summary>The name of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.XErrorPath">
            <summary>An XPath to check the server response for errors.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.XNamespace">
            <summary>The namespace of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.XParent">
            <summary>The parent of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.XPath">
            <summary>Provides a way to point to a specific element in the response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.XPrefix">
            <summary>The prefix of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.XSubTree">
            <summary>A snapshot of the current element in the document.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rests.XText">
            <summary>The text of the current element.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssOPMLHeaderEventArgs">
            <summary>Event arguments for the OPMLHeader event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssOPMLOutlineEventArgs">
            <summary>Event arguments for the OPMLOutline event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.RsssTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.AddCookieAsync(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.AddItem(System.String,System.String,System.String)">
            <summary>Inserts a new item into the beginning of an RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.AddItemAsync(System.String,System.String,System.String)">
            <summary>Inserts a new item into the beginning of an RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.AddNamespace(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.AddNamespaceAsync(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.GetFeed(System.String)">
            <summary>Fetches an RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.GetFeedAsync(System.String)">
            <summary>Fetches an RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.GetProperty(System.String)">
            <summary>Gets the value of a specific RSS feed item element or attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.GetPropertyAsync(System.String)">
            <summary>Gets the value of a specific RSS feed item element or attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.GetURL(System.String)">
            <summary>Fetches an RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.GetURLAsync(System.String)">
            <summary>Fetches an RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.OPMLAttr(System.String)">
            <summary>Returns the value of the attribute specified in the parameter.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.OPMLAttrAsync(System.String)">
            <summary>Returns the value of the attribute specified in the parameter.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.Put(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.PutAsync(System.String)">
            <summary>Sends data to the HTTP server using the HTTP PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.ReadFile(System.String)">
            <summary>Loads an RSS file into the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.ReadFileAsync(System.String)">
            <summary>Loads an RSS file into the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.ReadOPML(System.String)">
            <summary>Reads and parses an OPML file.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.ReadOPMLAsync(System.String)">
            <summary>Reads and parses an OPML file.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.Reset">
            <summary>Resets all properties of the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.ResetAsync">
            <summary>Resets all properties of the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.SetProperty(System.String,System.String)">
            <summary>Sets the value of a specific RSS feed property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.SetPropertyAsync(System.String,System.String)">
            <summary>Sets the value of a specific RSS feed property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.WriteFile(System.String)">
            <summary>Writes an RSS feed from the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Rsss.WriteFileAsync(System.String)">
            <summary>Writes an RSS feed from the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnOPMLHeader">
            <summary>Fired for each value in the Header section of the current OPML document.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnOPMLOutline">
            <summary>Fired for each outline in the current OPML document.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Rsss.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.Channel">
            <summary>The channel data for the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.Items">
            <summary>A collection of items in the current RSS feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.Namespaces">
            <summary>A collection of namespaces in the current namespace stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.IfModifiedSince">
            <summary>A date determining the maximum age of the desired document.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.RSSData">
            <summary>The complete text of the RSS XML file.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.RSSVersion">
            <summary>The RSS protocol version of the current RSS feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.TransferredDataLimit">
            <summary>The maximum of bytes of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Rsss.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmppsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmppsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmppsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmppsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmppsMessageInEventArgs">
            <summary>Event arguments for the MessageIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmppsMessageStatusEventArgs">
            <summary>Event arguments for the MessageStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmppsPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmppsReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmppsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmppsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.AddRecipient(System.Int32,System.String)">
            <summary>Will add a recipient of the specified type to the recipient list.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.AddRecipientAsync(System.Int32,System.String)">
            <summary>Will add a recipient of the specified type to the recipient list.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.CancelMessage(System.String)">
            <summary>Will cancel the specified message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.CancelMessageAsync(System.String)">
            <summary>Will cancel the specified message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.CheckLink">
            <summary>Will check the connection to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.CheckLinkAsync">
            <summary>Will check the connection to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.CheckMessageStatus(System.String)">
            <summary>Will retrieve the status of the specified message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.CheckMessageStatusAsync(System.String)">
            <summary>Will retrieve the status of the specified message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.Connect(System.String,System.String)">
            <summary>Will bind as a transceiver to the SMPP service.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.ConnectAsync(System.String,System.String)">
            <summary>Will bind as a transceiver to the SMPP service.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.Disconnect">
            <summary>Will disconnect from the SMPP service.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.DisconnectAsync">
            <summary>Will disconnect from the SMPP service.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.ReplaceMessage(System.String,System.String)">
            <summary>Replaces a previously sent message with a new one.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.ReplaceMessageAsync(System.String,System.String)">
            <summary>Replaces a previously sent message with a new one.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.SendCommand(System.Int32,System.Byte[])">
            <summary>Will format and send a PDU using the specified command identifier and payload.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.SendCommandAsync(System.Int32,System.Byte[])">
            <summary>Will format and send a PDU using the specified command identifier and payload.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.SendData(System.Byte[])">
            <summary>Sends raw data to Recipients.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.SendDataAsync(System.Byte[])">
            <summary>Sends raw data to Recipients.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.SendMessage(System.String)">
            <summary>Sends a message to all recipients in the recipient list.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smpps.SendMessageAsync(System.String)">
            <summary>Sends a message to all recipients in the recipient list.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smpps.OnConnected">
            <summary>This event is fired after a successful bind operation.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smpps.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smpps.OnDisconnected">
            <summary>This event is fired when connection to the SMS service is lost.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smpps.OnError">
            <summary>This event is fired when the server detects an error.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smpps.OnMessageIn">
            <summary>This event is fired upon receipt of a message.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smpps.OnMessageStatus">
            <summary>This event is fired upon receipt of a message.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smpps.OnPITrail">
            <summary>This event is fired once for each PDU sent between the client and server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smpps.OnReadyToSend">
            <summary>Fired when IPPort is ready to send data.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smpps.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smpps.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.Recipients">
            <summary>A list of message recipients.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.Connected">
            <summary>Indicates whether or not the component is bound.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.MessageExpiration">
            <summary>Denotes the validity period of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.MessageId">
            <summary>The identifier of the most recently sent message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.MessagePriority">
            <summary>The priority level of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.Password">
            <summary>Contains the user's password.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.Protocol">
            <summary>The SMPP protocol to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.ScheduledDelivery">
            <summary>Tells the server when to deliver the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.SenderAddress">
            <summary>The address of the ESME.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.ServiceType">
            <summary>Indicates the type of service for the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.SMPPPort">
            <summary>This property contains the server port for secure SMPP (default 3551).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.SMPPServer">
            <summary>The SMPP entity to which the component will connect.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.SMPPVersion">
            <summary>The SMPP version to be used throughout the connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.SystemType">
            <summary>A string representing the type of system during a connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smpps.UserId">
            <summary>Used for identification with the SMPP service.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmtpsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmtpsEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmtpsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmtpsExpandEventArgs">
            <summary>Event arguments for the Expand event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmtpsPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmtpsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmtpsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmtpsStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SmtpsTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.SetMessage(System.Byte[],System.Int32,System.Int32)">
            <summary>Provides a way to set the raw message content.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.Connect">
            <summary>Connects to the mail relay and sends the SMTP HELO command.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.ConnectAsync">
            <summary>Connects to the mail relay and sends the SMTP HELO command.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.Disconnect">
            <summary>Disconnects from the SMTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.DisconnectAsync">
            <summary>Disconnects from the SMTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.Expand(System.String)">
            <summary>Asks the MailServer to expand a name or mailing list.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.ExpandAsync(System.String)">
            <summary>Asks the MailServer to expand a name or mailing list.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.ProcessQueue(System.String)">
            <summary>Sends the messages which have previously been queued into QueueDir.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.ProcessQueueAsync(System.String)">
            <summary>Sends the messages which have previously been queued into QueueDir.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.Queue(System.String)">
            <summary>Queues the message into QueueDir.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.QueueAsync(System.String)">
            <summary>Queues the message into QueueDir.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.ResetHeaders">
            <summary>Resets all the message headers to empty.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.ResetHeadersAsync">
            <summary>Resets all the message headers to empty.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.Send">
            <summary>Sends the current message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.SendAsync">
            <summary>Sends the current message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.SendToTerminalAndEmail">
            <summary>Sends to terminal and email.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.SendToTerminalAndEmailAsync">
            <summary>Sends to terminal and email.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.SendToTerminalOnly">
            <summary>Sends to terminal only.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.SendToTerminalOnlyAsync">
            <summary>Sends to terminal only.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.SendToTerminalOrEmail">
            <summary>Sends to terminal or email.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.SendToTerminalOrEmailAsync">
            <summary>Sends to terminal or email.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.SetMessageStream(Windows.Storage.Streams.IInputStream)">
            <summary>Sets the stream to be uploaded to the server as part of the message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.SetMessageStreamAsync(Windows.Storage.Streams.IInputStream)">
            <summary>Sets the stream to be uploaded to the server as part of the message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.Verify(System.String)">
            <summary>Sends a Verification request to the SMTP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Smtps.VerifyAsync(System.String)">
            <summary>Sends a Verification request to the SMTP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smtps.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smtps.OnEndTransfer">
            <summary>Fired when the message text completes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smtps.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smtps.OnExpand">
            <summary>Fired for every email address returned by the server when the Expand method is called.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smtps.OnPITrail">
            <summary>Traces the commands sent to the mail server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smtps.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smtps.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smtps.OnStartTransfer">
            <summary>Fired when the message text starts transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Smtps.OnTransfer">
            <summary>Fired while the message text gets transferred to MailServer.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.MessageHeaders">
            <summary>Collection of RFC822-encoded headers of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.MessageRecipients">
            <summary>The collection of recipients of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.AllowExtensions">
            <summary>A switch allowing the component to use ESMTP features (SMTP extensions).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.AuthMechanism">
            <summary>Used when connecting to the mail server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.BCc">
            <summary>A comma separated list of addresses for blind carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.Cc">
            <summary>A comma separated list of addresses for carbon copies (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.DeliveryNotificationTo">
            <summary>Email address to send to which to send a delivery notification.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.From">
            <summary>The email address of the sender (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.Importance">
            <summary>Importance of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.MailPort">
            <summary>The server port for SMTP (default 25).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.MailServer">
            <summary>The name or address of a mail server (mail relay).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.MessageB">
            <summary>Provides a way to set the raw message content.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.Message">
            <summary>Provides a way to set the raw message content.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.MessageDate">
            <summary>Date of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.MessageHeadersString">
            <summary>String representation of RFC822-encoded headers of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.MessageId">
            <summary>The Message Identifier for the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.MessageText">
            <summary>The full text of the message to send (without headers).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.OtherHeaders">
            <summary>An RFC 822 compliant string consisting of extra headers.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.Password">
            <summary>A password for logon to the MailServer.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.Priority">
            <summary>Priority of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.ReadReceiptTo">
            <summary>Email address to send a read receipt to.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.ReplyTo">
            <summary>A mail address to which to reply (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.ReturnPath">
            <summary>Sets the Return-Path to be used for sending email.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.SendTo">
            <summary>A comma separated list of addresses for destinations (required).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.Sensitivity">
            <summary>Sensitivity of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.Subject">
            <summary>The subject of the mail message (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Smtps.User">
            <summary>A user identifier to login as in the MailServer.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SnppsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SnppsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SnppsPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SnppsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SnppsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.Connect">
            <summary>Connects to an SNPP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.ConnectAsync">
            <summary>Connects to an SNPP server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.Disconnect">
            <summary>Disconnects from an SNPP gateway.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.DisconnectAsync">
            <summary>Disconnects from an SNPP gateway.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.Reset">
            <summary>Resets the server state created during the connection.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.ResetAsync">
            <summary>Resets the server state created during the connection.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.Send">
            <summary>Sends the current message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Snpps.SendAsync">
            <summary>Sends the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Snpps.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Snpps.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Snpps.OnPITrail">
            <summary>Traces the commands sent to the server, and the respective replies.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Snpps.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Snpps.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.CallerId">
            <summary>The identifier of the caller.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.Command">
            <summary>Used to send additional commands directly to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.LastReply">
            <summary>The last reply from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.Message">
            <summary>The message being sent (alphanumeric).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.PagerId">
            <summary>The identifying number of the pager to send a Message to.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.ServerName">
            <summary>The name or address of the SNPP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.ServerPort">
            <summary>The server port for SNPP (default 444).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Snpps.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SoapsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SoapsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SoapsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SoapsEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SoapsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SoapsHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SoapsRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SoapsSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SoapsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SoapsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SoapsStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SoapsStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.SoapsTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.AddCookieAsync(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.AddNamespace(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.AddNamespaceAsync(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.AddParam(System.String,System.String)">
            <summary>Adds a parameter-value pair.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.AddParamAsync(System.String,System.String)">
            <summary>Adds a parameter-value pair.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.Attr(System.String)">
            <summary>Returns the value of the specified attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.AttrAsync(System.String)">
            <summary>Returns the value of the specified attribute.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.BuildPacket">
            <summary>Build the request packet.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.BuildPacketAsync">
            <summary>Build the request packet.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.EvalPacket">
            <summary>Evaluate the packet in SOAPPacket.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.EvalPacketAsync">
            <summary>Evaluate the packet in SOAPPacket.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.HasXPath(System.String)">
            <summary>Determines whether a specific element exists in the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.HasXPathAsync(System.String)">
            <summary>Determines whether a specific element exists in the document.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.ResetAsync">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.SendPacket">
            <summary>Send the packet.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.SendPacketAsync">
            <summary>Send the packet.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.SendRequest">
            <summary>Send the request.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.SendRequestAsync">
            <summary>Send the request.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.Value(System.String)">
            <summary>Returns the value of a parameter.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Soaps.ValueAsync(System.String)">
            <summary>Returns the value of a parameter.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Soaps.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Soaps.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Soaps.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Soaps.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Soaps.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Soaps.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Soaps.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Soaps.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Soaps.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Soaps.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Soaps.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Soaps.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Soaps.OnTransfer">
            <summary>Fired while the response transfers.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Namespaces">
            <summary>A collection of namespaces in the current stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Params">
            <summary>A collection of parameters for the SOAP Method.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.XAttributes">
            <summary>A collection of attributes of the current element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.ActionURI">
            <summary>The value of the SOAP-Action header.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.ContentType">
            <summary>Content type for SOAP request data.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.FaultActor">
            <summary>Actor of any faults returned by the SOAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.FaultCode">
            <summary>Code of any faults returned by the SOAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.FaultString">
            <summary>Textual description of any faults returned by the SOAP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.IfModifiedSince">
            <summary>A date determining the maximum age of the desired document.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Method">
            <summary>The remote Method.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.MethodURI">
            <summary>The URI corresponding to the SOAP Method.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Pragma">
            <summary>A browser/server specific header line (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.ReturnValue">
            <summary>Value returned by the SOAP Method.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.SOAPEncoding">
            <summary>The type of SOAP Encoding used for SOAP requests.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.SOAPHeader">
            <summary>Contents of the optional SOAP header sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.SOAPPacket">
            <summary>Full contents of the SOAP packet.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.TransferredDataLimit">
            <summary>The maximum of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.URL">
            <summary>The URL to fetch.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.ValueFormat">
            <summary>Format of data returned or set.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.XChildren">
            <summary>The number of children of the element pointed to by XPath.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.XElement">
            <summary>The name of the element pointed to by XPath.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.XNamespace">
            <summary>The namespace of the element pointed to by XPath.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.XParent">
            <summary>The parent of the element pointed to by XPath.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.XPath">
            <summary>A path into the SOAPPacket received by the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.XPrefix">
            <summary>The prefix of the element pointed to by XPath.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Soaps.XText">
            <summary>The text of the element pointed to by XPath.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsCommandEventArgs">
            <summary>Event arguments for the Command event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsDataInEventArgs">
            <summary>Event arguments for the DataIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsDoEventArgs">
            <summary>Event arguments for the Do event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsDontEventArgs">
            <summary>Event arguments for the Dont event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsSubOptionEventArgs">
            <summary>Event arguments for the SubOption event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsWillEventArgs">
            <summary>Event arguments for the Will event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.TelnetsWontEventArgs">
            <summary>Event arguments for the Wont event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Telnets.SetDataToSend(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Telnets.SetDoSubOption(System.Byte[],System.Int32,System.Int32)">
            <summary>A Telnet SubOption to send to the server with the SubOption command.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Telnets.SetUrgentData(System.Byte[],System.Int32,System.Int32)">
            <summary>A string of data to be sent urgently (out-of-band) to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Telnets.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Telnets.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Telnets.Connect(System.String)">
            <summary>Connect to a remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Telnets.ConnectAsync(System.String)">
            <summary>Connect to a remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Telnets.Disconnect">
            <summary>Disconnect from the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Telnets.DisconnectAsync">
            <summary>Disconnect from the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Telnets.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Telnets.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Telnets.Send(System.Byte[])">
            <summary>Send data to the remote host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Telnets.SendAsync(System.Byte[])">
            <summary>Send data to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnCommand">
            <summary>Fired when a Telnet command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnDataIn">
            <summary>Fired when data is received from the remote host.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnDo">
            <summary>Fired when a Telnet DO OPTION command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnDont">
            <summary>Fired when a Telnet DONT OPTION command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnReadyToSend">
            <summary>Fired when the component is ready to send data.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnSubOption">
            <summary>Fired when a Telnet SubOption command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnWill">
            <summary>Fired when a Telnet WILL OPTION command comes from the Telnet server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Telnets.OnWont">
            <summary>Fired when a Telnet WONT OPTION command comes from the Telnet server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.AcceptData">
            <summary>Enables or disables data reception (the DataIn event).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.BytesSent">
            <summary>The number of bytes actually sent after an assignment to DataToSend.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.Command">
            <summary>A single character Telnet command code to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.Connected">
            <summary>Triggers a connection or disconnection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.DataToSendB">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.DataToSend">
            <summary>A string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.DontOption">
            <summary>A single character Telnet option code to be sent to the server with the Telnet DONT command.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.DoOption">
            <summary>A single character Telnet option code to be sent to the server with the Telnet DO command.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.DoSubOptionB">
            <summary>A Telnet SubOption to send to the server with the SubOption command.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.DoSubOption">
            <summary>A Telnet SubOption to send to the server with the SubOption command.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.KeepAlive">
            <summary>When True, KEEPALIVE packets are enabled (for long connections).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.Linger">
            <summary>When set to True, connections are terminated gracefully.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.LocalPort">
            <summary>The TCP port in the local host where IPPort binds.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.RemoteHost">
            <summary>The address of the remote host.  Domain names are resolved to IP addresses.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.RemotePort">
            <summary>The secure Telnet port in the remote host (default is 992).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.Transparent">
            <summary>When True, Telnet command processing is disabled.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.UrgentDataB">
            <summary>A string of data to be sent urgently (out-of-band) to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.UrgentData">
            <summary>A string of data to be sent urgently (out-of-band) to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.WillOption">
            <summary>A single character Telnet option code to be sent to the server with the Telnet WILL command.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Telnets.WontOption">
            <summary>A single character Telnet option code to be sent to the server with the Telnet WONT command.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsDirListEventArgs">
            <summary>Event arguments for the DirList event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsResourcePropertiesEventArgs">
            <summary>Event arguments for the ResourceProperties event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebdavsTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.AddCookieAsync(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.AddNamespace(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.AddNamespaceAsync(System.String,System.String)">
            <summary>Adds a namespace to the Namespaces properties.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.CopyResource(System.String,System.String)">
            <summary>Copy a resource to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.CopyResourceAsync(System.String,System.String)">
            <summary>Copy a resource to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.DeleteResource(System.String)">
            <summary>Delete a resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.DeleteResourceAsync(System.String)">
            <summary>Delete a resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.FindProperties(System.String)">
            <summary>Get resource property values from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.FindPropertiesAsync(System.String)">
            <summary>Get resource property values from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.FindPropertyNames(System.String)">
            <summary>Get resource property names from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.FindPropertyNamesAsync(System.String)">
            <summary>Get resource property names from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.GetProperty(System.String)">
            <summary>Get the value for a particular property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.GetPropertyAsync(System.String)">
            <summary>Get the value for a particular property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.GetResource(System.String)">
            <summary>Get a resource using the WebDAV GET method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.GetResourceAsync(System.String)">
            <summary>Get a resource using the WebDAV GET method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.ListDirectory(System.String)">
            <summary>List the files and subdirectories of the ResourceURI.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.ListDirectoryAsync(System.String)">
            <summary>List the files and subdirectories of the ResourceURI.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.LockResource(System.String)">
            <summary>Obtain a lock for a specified resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.LockResourceAsync(System.String)">
            <summary>Obtain a lock for a specified resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.MakeDirectory(System.String)">
            <summary>Make a new directory.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.MakeDirectoryAsync(System.String)">
            <summary>Make a new directory.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.MoveResource(System.String,System.String)">
            <summary>Moves one resource to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.MoveResourceAsync(System.String,System.String)">
            <summary>Moves one resource to a new location.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.PatchProperties(System.String)">
            <summary>Update the current set of properties on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.PatchPropertiesAsync(System.String)">
            <summary>Update the current set of properties on the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.PostToResource(System.String,System.Byte[])">
            <summary>Posts data to a resource using the WebDAV POST method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.PostToResourceAsync(System.String,System.Byte[])">
            <summary>Posts data to a resource using the WebDAV POST method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.PutResource(System.String)">
            <summary>Send data to the server using the PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.PutResourceAsync(System.String)">
            <summary>Send data to the server using the PUT method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.ResetAsync">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.SetDownloadStream(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the downloaded data from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.SetDownloadStreamAsync(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the downloaded data from the server will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.SetProperty(System.String,System.String)">
            <summary>Set the value of a property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.SetPropertyAsync(System.String,System.String)">
            <summary>Set the value of a property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.SetUploadStream(Windows.Storage.Streams.IInputStream)">
            <summary>Sets the stream to be uploaded to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.SetUploadStreamAsync(Windows.Storage.Streams.IInputStream)">
            <summary>Sets the stream to be uploaded to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.UnLockResource(System.String)">
            <summary>Unlocks a resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webdavs.UnLockResourceAsync(System.String)">
            <summary>Unlocks a resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnDirList">
            <summary>Fires for each entry returned in a directory listing.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnResourceProperties">
            <summary>Fires for each entry returned through a property search.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webdavs.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Namespaces">
            <summary>Collection of namespaces in the current stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Properties">
            <summary>A collection of WebDAV properties.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Resources">
            <summary>Collection of resources resulting from the last directory listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Depth">
            <summary>The depth associated with the current operation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.LocalFile">
            <summary>The path to a local file used for DAV operations.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.LockOwner">
            <summary>The principle that owns the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.LockScope">
            <summary>The scope of the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.LockTimeout">
            <summary>The time to live for the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.LockTokens">
            <summary>The lock string to be used when submitting operations on a locked resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.LockType">
            <summary>The type of the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.TransferredDataLimit">
            <summary>The maximum of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webdavs.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebformsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebformsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebformsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebformsEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebformsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebformsHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebformsRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebformsSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebformsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebformsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebformsStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebformsStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebformsTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.AddCookieAsync(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.AddFormVar(System.String,System.String)">
            <summary>Adds a form variable and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.AddFormVarAsync(System.String,System.String)">
            <summary>Adds a form variable and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.ResetAsync">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.Submit">
            <summary>Post current data to the URL specified by the URL property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.SubmitAsync">
            <summary>Post current data to the URL specified by the URL property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.SubmitTo(System.String)">
            <summary>Post current data to the URL specified by the 'URL' parameter.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webforms.SubmitToAsync(System.String)">
            <summary>Post current data to the URL specified by the 'URL' parameter.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webforms.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webforms.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webforms.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webforms.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webforms.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webforms.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webforms.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webforms.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webforms.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webforms.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webforms.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webforms.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webforms.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.FormVars">
            <summary>Form variables for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.ContentType">
            <summary>Content type for posts and puts.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.Encoding">
            <summary>The encoding type for the form data.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.From">
            <summary>The email address of the HTTP agent (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.TransferredDataLimit">
            <summary>The maximum of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.URL">
            <summary>The URL to post information to.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webforms.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsHeaderEventArgs">
            <summary>Event arguments for the Header event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsRedirectEventArgs">
            <summary>Event arguments for the Redirect event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsSetCookieEventArgs">
            <summary>Event arguments for the SetCookie event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsStatusEventArgs">
            <summary>Event arguments for the Status event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.WebuploadsUploadProgressEventArgs">
            <summary>Event arguments for the UploadProgress event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.AddCookie(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.AddCookieAsync(System.String,System.String)">
            <summary>Adds a cookie and the corresponding value to the outgoing request headers.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.AddFileVar(System.String,System.String)">
            <summary>Adds a file variable and the corresponding file name.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.AddFileVarAsync(System.String,System.String)">
            <summary>Adds a file variable and the corresponding file name.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.AddFormVar(System.String,System.String)">
            <summary>Adds a form variable and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.AddFormVarAsync(System.String,System.String)">
            <summary>Adds a form variable and the corresponding value.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.DoEvents">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.DoEventsAsync">
            <summary>Processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.Reset">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.ResetAsync">
            <summary>Reset the component.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.Upload">
            <summary>Posts data to the URL specified by URL.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.UploadAsync">
            <summary>Posts data to the URL specified by URL.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.UploadTo(System.String)">
            <summary>Posts data to the URL specified by the 'URL' parameter.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Webuploads.UploadToAsync(System.String)">
            <summary>Posts data to the URL specified by the 'URL' parameter.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnConnected">
            <summary>Fired immediately after a connection completes (or fails).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnDisconnected">
            <summary>Fired when a connection is closed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnEndTransfer">
            <summary>Fired when a document finishes transferring.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnError">
            <summary>Information about errors during data delivery.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnHeader">
            <summary>Fired every time a header line comes in.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnRedirect">
            <summary>Fired when a redirection is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnSetCookie">
            <summary>Fired for every cookie set by the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnStartTransfer">
            <summary>Fired when a document starts transferring (after the headers).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnStatus">
            <summary>Fired when the HTTP status line is received from the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnTransfer">
            <summary>Fired while a document transfers (delivers document).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Webuploads.OnUploadProgress">
            <summary>Fired while the component is uploading files to the URL.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.Cookies">
            <summary>Collection of cookies.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.FileVars">
            <summary>File variables for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.FormVars">
            <summary>Form variables for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.ParsedHeaders">
            <summary>Collection of headers returned from the last request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.Proxy">
            <summary>A set of properties related to proxy access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.Accept">
            <summary>A list of acceptable MIME types for the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.Authorization">
            <summary>The Authorization string to be sent to the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.AuthScheme">
            <summary>The authentication scheme to use when server authorization is required.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.Connected">
            <summary>Shows whether the component is connected.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.ContentType">
            <summary>Content type for posts and puts.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.FollowRedirects">
            <summary>Determines what happens when the server issues a redirect.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.From">
            <summary>The email address of the HTTP agent (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.Idle">
            <summary>The current status of the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.LocalFile">
            <summary>The path to a local file for downloading.  If the file exists, it is overwritten.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.OtherHeaders">
            <summary>Other headers as determined by the user (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.Password">
            <summary>A password if authentication is to be used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.Referer">
            <summary>Referer URL/document (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.StatusLine">
            <summary>The first line of the last server response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.TransferredDataB">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.TransferredData">
            <summary>The contents of the last response from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.TransferredDataLimit">
            <summary>The maximum of data to be transferred.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.TransferredHeaders">
            <summary>The full set of headers as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.URL">
            <summary>The URL to post information to.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Webuploads.User">
            <summary>A user name if authentication is to be used.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsBuddyUpdateEventArgs">
            <summary>Event arguments for the BuddyUpdate event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsConnectedEventArgs">
            <summary>Event arguments for the Connected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsConnectionStatusEventArgs">
            <summary>Event arguments for the ConnectionStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsDisconnectedEventArgs">
            <summary>Event arguments for the Disconnected event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsEndTransferEventArgs">
            <summary>Event arguments for the EndTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsErrorEventArgs">
            <summary>Event arguments for the Error event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsIQEventArgs">
            <summary>Event arguments for the IQ event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsMessageInEventArgs">
            <summary>Event arguments for the MessageIn event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsPITrailEventArgs">
            <summary>Event arguments for the PITrail event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsPresenceEventArgs">
            <summary>Event arguments for the Presence event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsReadyToSendEventArgs">
            <summary>Event arguments for the ReadyToSend event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsSSLServerAuthenticationEventArgs">
            <summary>Event arguments for the SSLServerAuthentication event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsSSLStatusEventArgs">
            <summary>Event arguments for the SSLStatus event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsStartTransferEventArgs">
            <summary>Event arguments for the StartTransfer event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsSubscriptionRequestEventArgs">
            <summary>Event arguments for the SubscriptionRequest event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsSyncEventArgs">
            <summary>Event arguments for the Sync event.</summary>
        </member>
        <member name="T:nsoftware.IPWorksSSL.XmppsTransferEventArgs">
            <summary>Event arguments for the Transfer event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.Add(System.String,System.String,System.String)">
            <summary>This method will add an entity to this entity's roster.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.AddAsync(System.String,System.String,System.String)">
            <summary>This method will add an entity to this entity's roster.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.Cancel(System.String)">
            <summary>This will cancel another entity's subscription to this entity's presence.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.CancelAsync(System.String)">
            <summary>This will cancel another entity's subscription to this entity's presence.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.ChangePassword(System.String)">
            <summary>This method will change the current user's password.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.ChangePasswordAsync(System.String)">
            <summary>This method will change the current user's password.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.ChangePresence(System.Int32,System.String)">
            <summary>This method will set the availability and status of this entity.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.ChangePresenceAsync(System.Int32,System.String)">
            <summary>This method will set the availability and status of this entity.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.Config(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.ConfigAsync(System.String)">
            <summary>Sets or retrieves a configuration setting.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.Connect(System.String,System.String)">
            <summary>This method will connect the component to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.ConnectAsync(System.String,System.String)">
            <summary>This method will connect the component to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.Disconnect">
            <summary>This method disconnects the component from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.DisconnectAsync">
            <summary>This method disconnects the component from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.DoEvents">
            <summary>This method processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.DoEventsAsync">
            <summary>This method processes events from the internal message queue.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.Interrupt">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.InterruptAsync">
            <summary>Interrupt the current method.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.ProbePresence(System.String)">
            <summary>Use this method to probe for another entity's presence.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.ProbePresenceAsync(System.String)">
            <summary>Use this method to probe for another entity's presence.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.QueryRegister(System.String)">
            <summary>This method queries a server for the necessary registration fields.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.QueryRegisterAsync(System.String)">
            <summary>This method queries a server for the necessary registration fields.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.Register(System.String)">
            <summary>This method registers an account with a server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.RegisterAsync(System.String)">
            <summary>This method registers an account with a server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.Remove(System.String,System.String,System.String)">
            <summary>This method will remove an entity from this entity's roster.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.RemoveAsync(System.String,System.String,System.String)">
            <summary>This method will remove an entity from this entity's roster.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.RetrieveRoster">
            <summary>This method will retrieve this entity's roster from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.RetrieveRosterAsync">
            <summary>This method will retrieve this entity's roster from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SendCommand(System.String)">
            <summary>This method sends a command to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SendCommandAsync(System.String)">
            <summary>This method sends a command to the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SendFile(System.String)">
            <summary>Sends a file to the specified user.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SendFileAsync(System.String)">
            <summary>Sends a file to the specified user.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SendMessage(System.String)">
            <summary>This method will send a message to the specified user.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SendMessageAsync(System.String)">
            <summary>This method will send a message to the specified user.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SetReceiveStream(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the received file data from will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SetReceiveStreamAsync(Windows.Storage.Streams.IOutputStream)">
            <summary>Sets the stream to which the received file data from will be written.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SetSendStream(Windows.Storage.Streams.IInputStream,System.String)">
            <summary>Sets the stream to be sent.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SetSendStreamAsync(Windows.Storage.Streams.IInputStream,System.String)">
            <summary>Sets the stream to be sent.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SetUserInfoField(System.String,System.String)">
            <summary>This method will add a user information field for registration.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SetUserInfoFieldAsync(System.String,System.String)">
            <summary>This method will add a user information field for registration.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SubscribeTo(System.String)">
            <summary>Use this method to subscribe to another entity's presence.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.SubscribeToAsync(System.String)">
            <summary>Use this method to subscribe to another entity's presence.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.Unregister">
            <summary>This method cancels an account with the host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.UnregisterAsync">
            <summary>This method cancels an account with the host.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.UnsubscribeTo(System.String)">
            <summary>This method will cancel a subscription to another entity's presence.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Xmpps.UnsubscribeToAsync(System.String)">
            <summary>This method will cancel a subscription to another entity's presence.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.RuntimeLicense">
            <summary>Runtime license key (derived from the development license, if any).</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnBuddyUpdate">
            <summary>This event is fired whenever a roster entry is updated.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnConnected">
            <summary>This event is fired when a connection to the IM Server is completed.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnConnectionStatus">
            <summary>Fired to indicate changes in connection state.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnDisconnected">
            <summary>This event is fired when the chat service connection is lost.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnEndTransfer">
            <summary>Fired when a file transfer completes.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnError">
            <summary>This event is fired when the server sends a protocol error message.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnIQ">
            <summary>This event is fired for IQ messages not normally supported by the component.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnMessageIn">
            <summary>This event is fired upon receipt of a message.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnPITrail">
            <summary>This event is fired for all protocol messages.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnPresence">
            <summary>This event is fired when the presence of a subscribed entity changes.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnReadyToSend">
            <summary>Fired when IPPort is ready to send data.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnSSLServerAuthentication">
            <summary>Fired after the server presents its certificate to the client.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnSSLStatus">
            <summary>Shows the progress of the secure connection.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnStartTransfer">
            <summary>Fired when a file transfer begins.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnSubscriptionRequest">
            <summary>This event fires when a subscription request is received.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnSync">
            <summary>This event fires upon a complete information synchronization with the server.</summary>
        </member>
        <member name="E:nsoftware.IPWorksSSL.Xmpps.OnTransfer">
            <summary>Fired during file transfer.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.Buddies">
            <summary>Collection of buddies in the buddy list.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.Firewall">
            <summary>A set of properties related to firewall access.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.SSLAcceptServerCert">
            <summary>Instructs the component to unconditionally accept the server certificate that matches the supplied certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.SSLCert">
            <summary>The certificate to be used during SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.SSLServerCert">
            <summary>The server certificate for the last established connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.UserInfo">
            <summary>Collection of named registration fields.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.AuthDomain">
            <summary>The domain under which the user will be authenticated.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.AuthMethods">
            <summary>Controls how the component authenticates itself with the XMPP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.Connected">
            <summary>This indicates the component's login status.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.IMPort">
            <summary>The server port for XMPP (default 5222).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.IMServer">
            <summary>This is the instant messaging server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.LocalDirectory">
            <summary>The directory to which received files are saved.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.LocalFile">
            <summary>The path to the file that will be sent.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.LocalHost">
            <summary>The name of the local host or user-assigned IP interface through which connections are initiated or accepted.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.MessageHTML">
            <summary>This is the HTML version of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.MessageOtherData">
            <summary>This property contains extra data elements for the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.MessageSubject">
            <summary>This is the subject of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.MessageText">
            <summary>This is the plain text of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.MessageThread">
            <summary>This is the thread name of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.MessageType">
            <summary>This is the type of the current message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.Password">
            <summary>This is the user's password.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.Presence">
            <summary>This is the availability of the entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.Resource">
            <summary>This is the resource for the current session.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.ServerDomain">
            <summary>The XMPP server's domain.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.SSLStartMode">
            <summary>Determines how the component starts the SSL negotiation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.Status">
            <summary>Description of the availability of this entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.Timeout">
            <summary>A timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.User">
            <summary>The user portion of this entity's Jabber ID.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Xmpps.UserDomain">
            <summary>Gets or sets the domain value used for Jabber IDs.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.AtomChannel.#ctor">
            <summary>The information about an Atom Feed as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.AuthorEmail">
            <summary>This property contains the email address of the author.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.AuthorName">
            <summary>This property contains the name of the author.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.AuthorUri">
            <summary>This property contains the URI of the author.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.CategoryLabel">
            <summary>This property contains a textual description of the label for the category.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.CategoryScheme">
            <summary>This property identifies a categorization scheme.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.CategoryTerm">
            <summary>This property contains the category to which the entry or feed belongs.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.ContributorEmail">
            <summary>This property contains the email address of the contributor.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.ContributorName">
            <summary>This property contains the name of the contributor.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.ContributorUri">
            <summary>This property contains the URI of the contributor.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.Generator">
            <summary>This property identifies the generator of the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.Icon">
            <summary>This property contains a reference to the image that represents this feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.Id">
            <summary>The Id conveys a permanent, universally unique identifier for an entry or feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.LinkHref">
            <summary>This property contains the location of the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.LinkHrefLang">
            <summary>This property contains the language of the content at the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.LinkLength">
            <summary>This property contains the length (in bytes) of the content at the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.LinkRel">
            <summary>This property indicates the relation of the linked content to the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.LinkTitle">
            <summary>This property contains the title of the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.LinkType">
            <summary>This property contains the MIME type of the content at the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.Logo">
            <summary>This property contains logo for an image that represents the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.Rights">
            <summary>This property contains information about the rights of the given feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.RightsTextType">
            <summary>Text type of the rights of the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.Subtitle">
            <summary>This contains a short description of the Atom Feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.SubtitleTextType">
            <summary>This property contains the text type of the sub-title of the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.Title">
            <summary>This property contains the title of the current Atom Feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.TitleTextType">
            <summary>This property contains the text type of the title of the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomChannel.Updated">
            <summary>This property contains the date and time that the feed was updated.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.HTTPCookie.#ctor">
            <summary>An HTTP cookie either sent to or received from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.HTTPCookie.#ctor(System.String,System.String)">
            <summary>An HTTP cookie either sent to or received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.HTTPCookie.Domain">
            <summary>The domain of a received cookie.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.HTTPCookie.Expiration">
            <summary>This property contains an expiration time for the cookie (if provided by the server).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.HTTPCookie.Name">
            <summary>The name of the cookie.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.HTTPCookie.Path">
            <summary>This property contains a path name to limit the cookie to (if provided by the server).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.HTTPCookie.Secure">
            <summary>This property contains the security flag of the received cookie.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.HTTPCookie.Value">
            <summary>This property contains the value of the cookie.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.AtomEntry.#ctor">
            <summary>An Atom entry as it is received from the Atom feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.AtomEntry.#ctor(System.String)">
            <summary>An Atom entry as it is received from the Atom feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.AtomEntry.#ctor(System.String,System.String)">
            <summary>An Atom entry as it is received from the Atom feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.AtomEntry.#ctor(System.String,System.String,System.String)">
            <summary>An Atom entry as it is received from the Atom feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.AuthorEmail">
            <summary>This property contains the email address of the author.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.AuthorName">
            <summary>This property contains the name of the author.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.AuthorUri">
            <summary>This property contains the URI of the author.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.CategoryLabel">
            <summary>This property contains a textual description of the label for the category.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.CategoryScheme">
            <summary>This property identifies a categorization scheme.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.CategoryTerm">
            <summary>This property contains the category to which the entry or feed belongs.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.Content">
            <summary>This property contains the text contents of an Atom entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.ContentTextType">
            <summary>This property contains the text type of the content of the entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.ContributorEmail">
            <summary>This property contains the email address of the contributor.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.ContributorName">
            <summary>This property contains the name of the contributor.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.ContributorUri">
            <summary>This property contains the URI of the contributor.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.Copyright">
            <summary>This property is used a textual description of the copyright  statement for the current ATOM feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.Created">
            <summary>This property contains a Date value that indicates the time that the current entry was created.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.EntryXML">
            <summary>This property contains the full XML contents of the entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.Id">
            <summary>The Id conveys a permanent, universally unique identifier for an entry or feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.Issued">
            <summary>This property contains a Date value that indicates the time that the current entry was issued.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.LinkHref">
            <summary>This property contains the location of the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.LinkHrefLang">
            <summary>This property contains the language of the content at the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.LinkLength">
            <summary>This property contains the length (in bytes) of the content at the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.LinkRel">
            <summary>This property indicates the relation of the linked content to the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.LinkTitle">
            <summary>This property contains the title of the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.LinkType">
            <summary>This property contains the MIME type of the content at the link.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.Modified">
            <summary>This property contains a Date value that indicates the time in  which the current entry was last modified.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.Published">
            <summary>This property contains the date that the entry was first created.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.Rights">
            <summary>This property contains information about the rights of the given entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.RightsTextType">
            <summary>Text type of the rights of the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.Source">
            <summary>This property is used when an entry has been copied from one feed to another feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.Summary">
            <summary>This property contains a short textual description of the Atom entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.SummaryTextType">
            <summary>This property contains the text type of the summary of the entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.Title">
            <summary>This property contains the title of the current Atom Feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.TitleTextType">
            <summary>This property contains the text type of the title of the feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.AtomEntry.Updated">
            <summary>This property contains the date and time that the feed was updated.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Firewall.#ctor">
            <summary>The firewall the component will connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Firewall.AutoDetect">
            <summary>This property tells the component whether or not to automatically detect and use firewall system settings, if available.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Firewall.FirewallType">
            <summary>This property determines the type of firewall to connect through.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Firewall.Host">
            <summary>This property contains the name or IP address of firewall (optional).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Firewall.Password">
            <summary>This property contains a password if authentication is to be used when connecting through the firewall.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Firewall.Port">
            <summary>This property contains the TCP port for the firewall Host .</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Firewall.User">
            <summary>This property contains a user name if authentication is to be used connecting through a firewall.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.XMLNamespace.#ctor">
            <summary>An XML namespace from the current namespace stack.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.XMLNamespace.#ctor(System.String,System.String)">
            <summary>An XML namespace from the current namespace stack.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMLNamespace.Prefix">
            <summary>The Prefix for the Namespace.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMLNamespace.URI">
            <summary>Namespace URI associated with the corresponding Prefix .</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Header.#ctor">
            <summary>An HTTP header as it is received from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Header.#ctor(System.String,System.String)">
            <summary>An HTTP header as it is received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Header.Field">
            <summary>This property contains the name of the HTTP header (same case as it is delivered).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Header.Value">
            <summary>This property contains the header contents.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Proxy.#ctor">
            <summary>The proxy the component will connect to.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Proxy.#ctor(System.String,System.Int32)">
            <summary>The proxy the component will connect to.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Proxy.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>The proxy the component will connect to.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Proxy.AuthScheme">
            <summary>This property is used to tell the component which  type of authorization to perform when connecting to the proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Proxy.AutoDetect">
            <summary>This property tells the component whether or not to automatically detect and use proxy system settings, if available.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Proxy.Password">
            <summary>This property contains a password if authentication is to be used for the proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Proxy.Port">
            <summary>This property contains the TCP port for the proxy Server (default 80).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Proxy.Server">
            <summary>If a proxy Server is given, then the HTTP request is sent to the proxy instead of the server otherwise specified.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Proxy.SSL">
            <summary>This property determines when to use SSL for the connection to the proxy.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Proxy.User">
            <summary>This property contains a user name, if authentication is to be used for the proxy.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certificate.#ctor">
            <summary>The digital certificate being used.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certificate.#ctor(System.Byte[])">
            <summary>The digital certificate being used.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Certificate.#ctor(nsoftware.IPWorksSSL.CertStoreTypes,System.Byte[],System.String,System.Byte[])">
            <summary>The digital certificate being used.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.EffectiveDate">
            <summary>The date which this certificate becomes valid.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.EncodedB">
            <summary>The certificate (PEM/base64 encoded).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.Encoded">
            <summary>The certificate (PEM/base64 encoded).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.ExpirationDate">
            <summary>The date the certificate expires.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.ExtendedKeyUsage">
            <summary>A comma-delimited list of extended key usage identifiers.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.Fingerprint">
            <summary>The Hex encoded 16-byte MD5 fingerprint of the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.Issuer">
            <summary>The issuer of the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.PrivateKey">
            <summary>The private key of the certificate (if available).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.PrivateKeyAvailable">
            <summary>Shows whether a PrivateKey is available for the  selected certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.PrivateKeyContainer">
            <summary>The name of the PrivateKey container for the  certificate (if available).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.PublicKey">
            <summary>The public key of the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.PublicKeyAlgorithm">
            <summary>Textual description of the public key algorithm of the  certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.PublicKeyLength">
            <summary>The length of the certificate public key (in bits).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.SerialNumber">
            <summary>The serial number of the certificate encoded as a  string.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.SignatureAlgorithm">
            <summary>Textual description of the signature algorithm of the  certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.StoreB">
            <summary>The name of the certificate store for the client certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.Store">
            <summary>The name of the certificate store for the client certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.StorePassword">
            <summary>If the certificate store is of a type that requires  a password, this property is used to specify that  password in order to open the certificate store.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.StoreType">
            <summary>The type of certificate store for this certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.Subject">
            <summary>The subject of the certificate used for client authentication.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.SubjectAltNames">
            <summary>A comma-separated lists of alternative subject names of the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.ThumbprintMD5">
            <summary>MD5 hash of the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.ThumbprintSHA1">
            <summary>SHA1 hash of the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.Usage">
            <summary>Textual description of UsageFlags .</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.UsageFlags">
            <summary>Flags that show intended use for the certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Certificate.Version">
            <summary>The certificate's version number.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.CalAlarm.#ctor">
            <summary>An alarm related to a calendar event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.CalAlarm.#ctor(System.String,nsoftware.IPWorksSSL.Actions)">
            <summary>An alarm related to a calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalAlarm.Action">
            <summary>This property determines what the CalDAV server will do when the alarm Trigger is reached.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalAlarm.Attachment">
            <summary>This property contains a sound file attached to the alarm.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalAlarm.AttachmentType">
            <summary>This property contains the MIME-Type of the attachment.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalAlarm.Duration">
            <summary>This property contains the interval between repeating alarms.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalAlarm.Message">
            <summary>This property contains a message used to alert the user when this alarm is triggered.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalAlarm.Recipient">
            <summary>This property contains the email address of the person to be alerted when this alarm is triggered.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalAlarm.Repeat">
            <summary>This property contains the number of times the alarm is to be repeated after the initial trigger.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalAlarm.Subject">
            <summary>This property contains the subject of the message used to alert the user when this alarm is triggered.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalAlarm.Trigger">
            <summary>This property contains the time when the alarm is triggered.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.CalCustomProp.#ctor">
            <summary>Name/Value pair of custom properties to add to the request.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.CalCustomProp.#ctor(System.String,System.String)">
            <summary>Name/Value pair of custom properties to add to the request.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.CalCustomProp.#ctor(System.String,System.String,System.String)">
            <summary>Name/Value pair of custom properties to add to the request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalCustomProp.Attribute">
            <summary>This property contains an optional attribute of the custom property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalCustomProp.Name">
            <summary>This property contains the textual name of the custom property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalCustomProp.Value">
            <summary>This property contains the value of the custom property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.CalFreeBusy.#ctor">
            <summary>Describes a single free/busy element in the calendar event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalFreeBusy.BusyRange">
            <summary>Contains the date/time range when the calendar owner is busy.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalFreeBusy.BusyType">
            <summary>Indicates the busy status of the corresponding BusyRange .</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.CalLock.#ctor">
            <summary>Group of fields used when locking and unlocking a calendar resource.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalLock.LockType">
            <summary>The type of the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalLock.Owner">
            <summary>The principle that owns the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalLock.Scope">
            <summary>The scope of the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalLock.Timeout">
            <summary>The time to live for the current resource lock.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalLock.Tokens">
            <summary>The lock string to be used when submitting operations on a locked resource.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.CalRecurrence.#ctor">
            <summary>Defines the recurrence set for an event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalRecurrence.Dates">
            <summary>Individual dates on which the event will recur.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalRecurrence.ExceptionDates">
            <summary>Defines the list of DATE-TIME exceptions to the recurrence set.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalRecurrence.ExceptionRule">
            <summary>Defines a rule or repeating pattern for an exception to the recurrence set.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalRecurrence.RecurrenceId">
            <summary>Identifies a recurring event.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalRecurrence.Rule">
            <summary>This property defines the recurrence rule for the event.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.CalReportFilter.#ctor">
            <summary>Used to restrict the results of a Report returned from the CalDAV server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalReportFilter.AlarmEnd">
            <summary>Limits the events returned in the report to only those with an alarm set in the range specified by AlarmStart and AlarmEnd .</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalReportFilter.AlarmStart">
            <summary>Limits the events returned in the report to only those with an alarm set in the range specified by AlarmStart and AlarmEnd .</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalReportFilter.CustomFilter">
            <summary>Allows the user to specify his own filter XML.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalReportFilter.EndDate">
            <summary>Limits the events returned in the report to only those which occur in the time range specified by StartDate and EndDate .</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalReportFilter.EventType">
            <summary>Indicates the type of calendar object resources to return in a Report.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalReportFilter.Property">
            <summary>Limits the events returned in a Report to only those which contain a matching property name and value.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalReportFilter.RecurEnd">
            <summary>Limits the recurring events returned in the report.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalReportFilter.RecurStart">
            <summary>Limits the recurring events returned in the report.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalReportFilter.ReturnCalendarData">
            <summary>Controls whether the contents of each calendar event is returned in the report.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalReportFilter.StartDate">
            <summary>Limits the events returned in the report to only those which occur in the time range specified  by StartDate and EndDate .</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalReportFilter.UID">
            <summary>Limits the recurring events returned in the report to only those with the specified UID.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.CalTimezone.#ctor">
            <summary>Specifies a time zone on a calendar collection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalTimezone.DSTName">
            <summary>The customary name for the daylight-savings time zone.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalTimezone.DSTOffsetFrom">
            <summary>The UTC offset that is in use when the onset of this time zone observance begins.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalTimezone.DSTOffsetTo">
            <summary>The UTC offset for daylight savings time, when this observance is in use.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalTimezone.DSTRule">
            <summary>This property defines the recurrence rule for the onset of this daylight savings time observance.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalTimezone.DSTStart">
            <summary>The effective onset date and local time for the daylight-time time zone definition.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalTimezone.LastModified">
            <summary>This optional property is a UTC value that specifies the date and time that this time zone definition was last updated.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalTimezone.StdName">
            <summary>The customary name for the standard time zone.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalTimezone.StdOffsetFrom">
            <summary>The UTC offset that is in use when the onset of this time zone observance begins.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalTimezone.StdOffsetTo">
            <summary>The UTC offset for standard time, when this observance is in use.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalTimezone.StdRule">
            <summary>This property defines the recurrence rule for the onset of this standard time observance.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalTimezone.StdStart">
            <summary>The effective onset date and local time for the standard-time time zone definition.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalTimezone.TimezoneId">
            <summary>This property specifies a text value that uniquely identifies this CalTimezone calendar component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CalTimezone.URL">
            <summary>Optionally points to a published time zone definition.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.CertExtension.#ctor(System.String,System.Byte[],System.Boolean)">
            <summary>Represents an extension for a certificate.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CertExtension.Critical">
            <summary>Whether or not the extension is defined as critical.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CertExtension.OID">
            <summary>The ASN.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CertExtension.ValueB">
            <summary>The raw value of this certificate extension.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.CertExtension.Value">
            <summary>The raw value of this certificate extension.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.FileAttachment.#ctor">
            <summary>This describes the file being attached.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.FileAttachment.#ctor(System.String)">
            <summary>This describes the file being attached.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.FileAttachment.#ctor(System.String,Windows.Storage.Streams.IInputStream)">
            <summary>This describes the file being attached.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.FileAttachment.#ctor(System.String,Windows.Storage.Streams.IInputStream,System.String)">
            <summary>This describes the file being attached.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.FileAttachment.File">
            <summary>This property contains the path of a file on your system that you would like to send as an attachment with your message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.FileAttachment.InputStream">
            <summary>When this property is set to a valid stream, the component will attach the data from the stream as the current attachment.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.FileAttachment.Name">
            <summary>This property contains the name of the attachment to be sent.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.MessageRecipient.#ctor">
            <summary>A recipient of the message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.MessageRecipient.#ctor(System.String)">
            <summary>A recipient of the message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.MessageRecipient.#ctor(System.String,System.Int32)">
            <summary>A recipient of the message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessageRecipient.Address">
            <summary>This field contains the email address of the recipient.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessageRecipient.Name">
            <summary>This field contains name of the recipient.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessageRecipient.Options">
            <summary>This field contains the recipient sending options (used only by SMTP).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessageRecipient.RecipientType">
            <summary>This field contains the recipient type: To, Cc, or BCc.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.DirEntry.#ctor">
            <summary>A listing in a directory returned from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DirEntry.Entry">
            <summary>This property contains the raw entry as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DirEntry.FileName">
            <summary>This property shows the file name in the last directory listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DirEntry.FileSize">
            <summary>This property shows the file size in the last directory listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DirEntry.FileTime">
            <summary>This property shows the file time in the last directory listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DirEntry.IsDir">
            <summary>This property specifies whether entries in the last directory listing are directories.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.HTMLImage.#ctor">
            <summary>This type describes an HTML embedded image.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.HTMLImage.#ctor(System.String)">
            <summary>This type describes an HTML embedded image.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.HTMLImage.File">
            <summary>This property contains the name of the image files embedded into the HTML message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.HTMLImage.Id">
            <summary>This property contains the content identifier for embedded images.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.HTMLImage.ImageType">
            <summary>This property contains the content type for embedded images.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.Mailbox.#ctor">
            <summary>Mailboxes collected when calling <b>ListMailboxes</b> or <b>ListSubscribedMailboxes</b>.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Mailbox.Flags">
            <summary>The mailbox flags in a mailbox listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Mailbox.Name">
            <summary>The mailbox name in a mailbox listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Mailbox.Separator">
            <summary>The Separator field contains the character that  separates the different parts in the mailbox path hierarchy.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.MessageInfo.#ctor">
            <summary>This is a listing of information for a message returned by the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessageInfo.Date">
            <summary>The date of a message in a message info listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessageInfo.Flags">
            <summary>Message flag in a message info listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessageInfo.From">
            <summary>The sender of a message in a message info listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessageInfo.MessageId">
            <summary>The unique identifier of a message in a message info listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessageInfo.Size">
            <summary>The size of a message in a message info listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessageInfo.Subject">
            <summary>The subject of a message in a message info listing.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.MessagePart.#ctor">
            <summary>A message part of a message listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessagePart.ContentDisposition">
            <summary>This field shows the value of the Content-Disposition header of the message part.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessagePart.ContentEncoding">
            <summary>This field shows how the data is encoded.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessagePart.ContentId">
            <summary>This field shows the value of the Content-Id header of the message part.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessagePart.ContentType">
            <summary>This field shows the type of data contained in the message part.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessagePart.Filename">
            <summary>This field shows the filename corresponding  to the part (if the part was included in the message as  an attached file).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessagePart.Id">
            <summary>This field contains the identifier of a part listing which  may be identified in other parts or messages.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessagePart.MultipartMode">
            <summary>This field shows how this part  relates to the message's whole multipart structure  ('mixed', 'alternative', etc.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessagePart.Parameters">
            <summary>This field contains the additional parameters passed  to the ContentType header such as the part charset etc.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.MessagePart.Size">
            <summary>This field contains the size of a part in a message part listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.AcceptData">
            <summary>Setting this property to False, temporarily disables data reception (and the DataIn event) on the connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.BytesSent">
            <summary>This property shows how many bytes were sent after the last assignment to DataToSend .</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.Connected">
            <summary>This property is used to disconnect individual connections and/or show their status.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.ConnectionId">
            <summary>This property contains an identifier generated by the component to identify each connection.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.DataToSendB">
            <summary>This property contains a string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.DataToSend">
            <summary>This property contains a string of data to be sent to the remote host.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.EOLB">
            <summary>The EOL property is used to define boundaries in the input stream using the value of the property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.EOL">
            <summary>The EOL property is used to define boundaries in the input stream using the value of the property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.LocalAddress">
            <summary>This property shows the IP address of the interface through which the connection is passing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.MaxLineLength">
            <summary>This property is the size of an internal buffer which holds received data while waiting for an EOL string.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.RemoteHost">
            <summary>This property shows the IP address of the remote host through which the connection is coming.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.RemotePort">
            <summary>This property shows the TCP port on the remote host through which the connection is coming.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.SingleLineMode">
            <summary>This property shows the special mode for line-oriented protocols.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.Timeout">
            <summary>This property contains a timeout for the component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.Connection.UploadStream">
            <summary>Setting this property uploads the data in the specified stream to the current connection.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.JSONElement.#ctor">
            <summary>An element contained within the JSON document.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.JSONElement.Name">
            <summary>The Name field provides the local name of the element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.JSONElement.XText">
            <summary>This field contains the inner text of the element.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.LDAPAttribute.#ctor">
            <summary>An attribute for the current entry.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.LDAPAttribute.#ctor(System.String)">
            <summary>An attribute for the current entry.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.LDAPAttribute.#ctor(System.String,System.String)">
            <summary>An attribute for the current entry.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.LDAPAttribute.#ctor(System.String,System.String,nsoftware.IPWorksSSL.LDAPAttributeModOps)">
            <summary>An attribute for the current entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.LDAPAttribute.AttributeType">
            <summary>Attribute type for the current entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.LDAPAttribute.ModOp">
            <summary>An operation to apply on attributes during an LDAP modify operation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.LDAPAttribute.ValueB">
            <summary>Attribute value for the current entry.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.LDAPAttribute.Value">
            <summary>Attribute value for the current entry.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.LDAPReference.#ctor">
            <summary>A reference returned from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.LDAPReference.URL">
            <summary>The url of the LDAP reference.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.ArticleInfo.#ctor">
            <summary>An article listed as a result of a <b>GroupOverview</b> or <b>GroupSearch</b>.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ArticleInfo.ArticleLines">
            <summary>The number of lines of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ArticleInfo.ArticleNumber">
            <summary>The number of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ArticleInfo.ArticleSize">
            <summary>The size of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ArticleInfo.Date">
            <summary>The date of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ArticleInfo.From">
            <summary>The sender of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ArticleInfo.MessageId">
            <summary>The unique message id of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ArticleInfo.OtherHeaders">
            <summary>The remaining headers of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ArticleInfo.References">
            <summary>The references of an article in a newsgroup overview.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ArticleInfo.Subject">
            <summary>The subject of an article in a newsgroup overview.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.GroupInfo.#ctor">
            <summary>A group listed by the NNTP server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.GroupInfo.CanPost">
            <summary>This property indicates whether a group in a newsgroup listing allows postings or articles.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.GroupInfo.FirstArticle">
            <summary>This property shows the first available article in a newsgroup listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.GroupInfo.Group">
            <summary>This property shows the group name in a newsgroup listing.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.GroupInfo.LastArticle">
            <summary>This property shows the last available article in a newsgroup listing.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.OAuthParam.#ctor">
            <summary>The parameter to be used in the request, or received in the response.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.OAuthParam.#ctor(System.String,System.String)">
            <summary>The parameter to be used in the request, or received in the response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.OAuthParam.Name">
            <summary>This field contains the name of the parameter to be used in the request or returned in the response.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.OAuthParam.Value">
            <summary>This field contains the value of the parameter to be used in the request or returned in the response.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.ODataEntryLink.#ctor">
            <summary>An object representing a single OData entry link.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataEntryLink.ResourcePath">
            <summary>The Resource Path of the OData entry element link.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataEntryLink.Title">
            <summary>The Title of the OData entry element link.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.ODataEntryProperty.#ctor">
            <summary>An object representing a single OData entry property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.ODataEntryProperty.#ctor(System.String,System.String)">
            <summary>An object representing a single OData entry property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataEntryProperty.Attributes">
            <summary>A space-separated list of attributes (name-value pairs) contained within an OData entry element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataEntryProperty.IsNull">
            <summary>Indicates whether a property value of a primitive type is null.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataEntryProperty.Name">
            <summary>The Name of the OData entry element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataEntryProperty.Type">
            <summary>The type of the OData schema property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataEntryProperty.Value">
            <summary>The Value of the OData entry element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataEntryProperty.XPath">
            <summary>The XPath of the OData entry property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.ODataSchemaAssociation.#ctor">
            <summary>An object representing a single OData schema navigation property and its corresponding association.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.Description">
            <summary>The documentation long description of the OData schema association.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.FromRole">
            <summary>The name of the starting point of the navigation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.FromRoleDescription">
            <summary>The documentation long description of the OData schema FromRole association end point.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.FromRoleEntity">
            <summary>The name of the entity that FromRole association end point maps to.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.FromRoleMultiplicity">
            <summary>The multiplicity of the FromRole association end point.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.FromRoleSummary">
            <summary>The documentation summary of the OData schema FromRole association end point.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.Name">
            <summary>The Name of the OData schema navigation property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.OnDelete">
            <summary>The delete action to be performed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.Relationship">
            <summary>The name of the relationship (association) of the navigation property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.Summary">
            <summary>The documentation summary of the OData schema association.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.ToRole">
            <summary>The name of the end point of the navigation.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.ToRoleDescription">
            <summary>The documentation long description of the OData schema ToRole association end point.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.ToRoleEntity">
            <summary>The name of the entity that ToRole association end point maps to.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.ToRoleMultiplicity">
            <summary>The multiplicity of the ToRole association end point.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaAssociation.ToRoleSummary">
            <summary>The documentation summary of the OData schema ToRole association end point.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.ODataSchemaEntity.#ctor">
            <summary>An object representing a single OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaEntity.Description">
            <summary>The documentation long description of the OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaEntity.Name">
            <summary>The name of the OData schema entity.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaEntity.Summary">
            <summary>The documentation summary of the OData schema entity.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.ODataSchemaProperty.#ctor">
            <summary>An object representing a single OData schema property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaProperty.Attributes">
            <summary>A space-separated list of attributes (name-value pairs) contained within an OData property element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaProperty.Description">
            <summary>The documentation long description of the OData schema property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaProperty.IsComplexType">
            <summary>Indicates whether a property is derived from a complex type.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaProperty.Name">
            <summary>The Name of the OData schema property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaProperty.Nullable">
            <summary>Indicates whether a property can be null.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaProperty.Summary">
            <summary>The documentation summary of the OData schema property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.ODataSchemaProperty.Type">
            <summary>The type of the OData schema property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.XMLAttribute.#ctor">
            <summary>An XML attribute from the current XML element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMLAttribute.Name">
            <summary>The Name provides the local name (without prefix)  of the attribute.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMLAttribute.Namespace">
            <summary>Attribute namespace.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMLAttribute.Prefix">
            <summary>Attribute prefix (if any).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMLAttribute.Value">
            <summary>Attribute value.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.XMLElement.#ctor">
            <summary>An element contained within the XML document.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMLElement.Name">
            <summary>The Name field provides the local name (without prefix) of the element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMLElement.Namespace">
            <summary>Namespace of the element.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMLElement.Prefix">
            <summary>Prefix of the element (if any).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMLElement.XText">
            <summary>The inner text of the element.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.RSSChannel.#ctor">
            <summary>The information about an RSS Feed as received from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.RSSChannel.#ctor(System.String,System.String)">
            <summary>The information about an RSS Feed as received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.Category">
            <summary>The value of this property is a forward-slash-separated string that identifies a hierarchic location in a particular hierarchy.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.CategoryDomain">
            <summary>This property contains the URL indicating the definition of the current RSS channel's category.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.Copyright">
            <summary>This property contains the copyright information for the current RSS channel (500 char max).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.Description">
            <summary>This property contains a textual description of the current RSS feed (Required - 500 char max).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.Docs">
            <summary>This should contain a URL for the documentation describing what format was used to create the current RSS channel.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.Generator">
            <summary>This property contains the name of the program which created the RSS feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.ImageDescription">
            <summary>This property is used to specify text that is  included in the title attribute of the image's link  formed in HTML rendering.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.ImageHeight">
            <summary>This property contains the height of the image in pixels.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.ImageLink">
            <summary>This property contains the URL associated with the channel's associated image.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.ImageTitle">
            <summary>This property contains the title of the channel's associated image.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.ImageUrl">
            <summary>This property contains the URL location of the channel's associated image.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.ImageWidth">
            <summary>This property contains the width of the image in pixels.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.Language">
            <summary>This property is required for feeds that conform to version 0.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.LastBuildDate">
            <summary>This property contains the date of the current RSS channel's most recent content changes.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.Link">
            <summary>This property contains the URL that corresponds to the website  where the RSS channel is located (Required - 500 char max).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.ManagingEditor">
            <summary>This property contains the email address or contact information for the current RSS channel's editor.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.PubDate">
            <summary>This property contains the date of the current RSS channel's most recent publication.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.SkipDays">
            <summary>This property contains a list of days in which aggregators may skip reading  the channel.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.SkipHours">
            <summary>This property contains a list of hours in which aggregators may skip reading  the channel.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.Title">
            <summary>This property contains the title of the current RSS Feed (Required - 40 char max).</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.Ttl">
            <summary>This property contains a number of minutes that represents  how long the channel may be cached before it needs to be  refreshed from the source.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSChannel.WebMaster">
            <summary>This property contains the email address or contact information for the current RSS channel's webmaster.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.RSSItem.#ctor">
            <summary>An RSS item as it is received from the RSS feed.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.RSSItem.#ctor(System.String,System.String)">
            <summary>An RSS item as it is received from the RSS feed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.Author">
            <summary>This property contains the email address or contact information for the current item's author.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.Category">
            <summary>This property contains the location of the current item within a hierarchy.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.CategoryDomain">
            <summary>This property contains the URL indicating the definition of the current item's category.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.Comments">
            <summary>If present, this property should point to a URL location of a  page for comments related to the current item.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.Description">
            <summary>This property contains the description of the content of the current item.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.EnclosureLength">
            <summary>This property indicates how large the enclosure is in bytes.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.EnclosureType">
            <summary>This property specifies the type of enclosure.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.EnclosureUrl">
            <summary>This property contains the URL where the enclosure is located.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.Guid">
            <summary>This property contains the globally unique identifier for the current item.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.GuidIsPermaLink">
            <summary>When this property is set to true, the reader may assume that the guid is a permalink to the item.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.ItemXML">
            <summary>This property contains the full XML contents of the item.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.Link">
            <summary>For headline or abstract items, this property should be the location of the full text of the item.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.PubDate">
            <summary>This property contains the date of the current item's most recent publication.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.Source">
            <summary>This property contains the name of the RSS feed in which the item was originally published, derived from the feed's title.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.SourceURL">
            <summary>This property contains the URL location of the XML-version of the current item's source.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.RSSItem.Title">
            <summary>This property contains the title or headline of the current item.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.SMPPRecipient.#ctor">
            <summary>A recipient of the SMPP message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.SMPPRecipient.#ctor(System.String)">
            <summary>A recipient of the SMPP message.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.SMPPRecipient.#ctor(System.String,System.Int32)">
            <summary>A recipient of the SMPP message.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.SMPPRecipient.Address">
            <summary>This property contains the email address of a particular recipient.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.SMPPRecipient.RecipientType">
            <summary>This property contains the type of a particular recipient.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.SOAPParam.#ctor">
            <summary>A parameter for the SOAP <b>Method</b>.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.SOAPParam.#ctor(System.String,System.String)">
            <summary>A parameter for the SOAP <b>Method</b>.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.SOAPParam.Attrs">
            <summary>Extra attributes for the parameter.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.SOAPParam.Name">
            <summary>The name of the Method parameter.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.SOAPParam.Value">
            <summary>The value of the Method parameter.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.DAVProperty.#ctor">
            <summary>A property that is either sent to or received from the server.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.DAVProperty.#ctor(System.String)">
            <summary>A property that is either sent to or received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DAVProperty.Attr">
            <summary>This property shows the attribute string for the specified DAV property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DAVProperty.Name">
            <summary>This property shows the name of the DAV property sent to or received from the server.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DAVProperty.NamespaceURI">
            <summary>This property shows the DAV property namespace.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DAVProperty.Operation">
            <summary>This property shows the operation to perform on a property when calling PatchProperties .</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DAVProperty.Status">
            <summary>This property shows the status of the retrieved DAV property.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DAVProperty.Value">
            <summary>This property shows the value of the DAV property.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.DAVResource.#ctor">
            <summary>A resource as returned in a directory listing from the WebDAV component.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DAVResource.ContentLanguage">
            <summary>This property shows the language of the resource being returned.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DAVResource.ContentLength">
            <summary>This property shows the length of the resource returned.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DAVResource.ContentType">
            <summary>This property shows the type of the resource being returned.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DAVResource.DisplayName">
            <summary>This property shows the name of the resource being listed.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DAVResource.LastModified">
            <summary>This property shows the date/time stamp of the last time the resource was modified.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.DAVResource.ResourceURI">
            <summary>This property shows the URI of the resource being returned.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.FormVar.#ctor">
            <summary>The form variable for the current request.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.FormVar.#ctor(System.String,System.String)">
            <summary>The form variable for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.FormVar.Name">
            <summary>This property contains the form variable name for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.FormVar.Value">
            <summary>This property contains the form variable value for the current request.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.FileVar.#ctor">
            <summary>The file variable for the current request.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.FileVar.#ctor(System.String,Windows.Storage.Streams.IInputStream)">
            <summary>The file variable for the current request.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.FileVar.ContentType">
            <summary>This property contains the value of the Content-Type of each form variable which corresponds to the file in the File field.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.FileVar.File">
            <summary>This property contains the path and filename of each file to be sent.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.FileVar.InputDataB">
            <summary>Specifies the file data to be sent.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.FileVar.InputData">
            <summary>Specifies the file data to be sent.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.FileVar.InputStream">
            <summary>This property is set when a stream is to be used for the data of the current filevar.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.FileVar.Name">
            <summary>This property contains the name of each form variable which corresponds to the file in the File field.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.XMPPBuddy.#ctor">
            <summary>A buddy in the XMPP buddy list.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMPPBuddy.Group">
            <summary>This is a comma-separated list of the buddy's associated groups.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMPPBuddy.Id">
            <summary>This is the jabber id of the buddy.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMPPBuddy.NickName">
            <summary>The nickname of the buddy, if one exists.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMPPBuddy.RealName">
            <summary>The real name of the buddy.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMPPBuddy.Subscription">
            <summary>This is a list of the subscription status for the buddy.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.XMPPUserInfo.#ctor">
            <summary>A named registration field.</summary>
        </member>
        <member name="M:nsoftware.IPWorksSSL.XMPPUserInfo.#ctor(System.String,System.String)">
            <summary>A named registration field.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMPPUserInfo.Field">
            <summary>This is the name of the current field necessary for registration.</summary>
        </member>
        <member name="P:nsoftware.IPWorksSSL.XMPPUserInfo.Value">
            <summary>This is the value for the current registration field, and should be set after calling QueryRegister and before calling Register .</summary>
        </member>
    </members>
</doc>
