<common:LayoutAwarePage 
    xmlns:UI="using:Microsoft.Advertising.WinRT.UI" 
    x:Name="pageRoot"
    x:Class="QuotesOfWisdom.GroupedItemsPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    IsTabStop="false"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:QuotesOfWisdom"
    xmlns:data="using:QuotesOfWisdom.Data"
    xmlns:common="using:QuotesOfWisdom.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:syncfusion="using:Syncfusion.UI.Xaml.Controls.Notification" 
    xmlns:Input="using:Syncfusion.UI.Xaml.Controls.Notification"
    mc:Ignorable="d" LayoutUpdated="LayoutRoot_LayoutUpdated">

    <Page.Resources>

        <!--
            Collection of grouped items displayed by this page, bound to a subset
            of the complete item list because items in groups cannot be virtualized
        -->
        <CollectionViewSource
            x:Name="groupedItemsViewSource"
            Source="{Binding Groups}"
            IsSourceGrouped="true"
            ItemsPath="TopItems"
            d:Source="{Binding AllGroups, Source={d:DesignInstance Type=data:Quotes, IsDesignTimeCreatable=True}}"/>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->



    <Grid  x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Text="{StaticResource AppName}" Grid.Column="1" Style="{StaticResource PageHeaderTextStyle}"/>
            <!--<UI:AdControl Grid.Column="2" BorderBrush="Aquamarine"  x:Name="ad2" ApplicationId="257e1c4b-e4ba-4afc-891e-6bc5e57fbb33" AdUnitId="10043308"  Width="292" Height="60" VerticalAlignment="Top" HorizontalAlignment="Right"  />-->
            <!--<Rectangle Grid.Column="2"  Width="292" Height="60"  Fill="Aquamarine" HorizontalAlignment="Right" />-->
        </Grid>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="350"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" x:Name="txtOthers" Grid.Column="0" Style="{StaticResource SubheaderTextStyle}" Margin="100,-10,0,0">Others</TextBlock>
            <syncfusion:SfHubTile Width="250" Grid.Column="0" Height="250" Margin="100,-5,0,0" Interval="8"
                                Header="Random Quotes" 
                                Foreground="White" 
                                BorderBrush="DarkGray"
                                Grid.Row="1"
                                HorizontalAlignment="Left"
                                Background="{StaticResource AccentBrush}"
                                VerticalAlignment="Top" Loaded="hubtile_Loaded"
                                x:Name="hubtile" Tapped="hubtile_Tapped"                                
                                IsFrozen="False">
                <syncfusion:SfHubTile.Title>
                    <TextBlock Text="{Binding ElementName=title, Path=Text}" FontSize="18" TextWrapping="Wrap" x:Name="title"/>
                </syncfusion:SfHubTile.Title>
                <syncfusion:SfHubTile.SecondaryContent>
                    <TextBlock Text="{Binding ElementName=secondarytitle, Path=Text}" FontSize="18" TextWrapping="Wrap" x:Name="secondarytitle" Margin="5,5,5,5" />                    
                </syncfusion:SfHubTile.SecondaryContent>
            </syncfusion:SfHubTile>
            <!--<Input:TextBoxExt Text="" x:Name="title" Visibility="Collapsed"/>
            <Input:TextBoxExt Text="" x:Name="secondarytitle" Visibility="Collapsed"/>-->


            <syncfusion:SfHubTile Width="250" Grid.Column="0" Height="250" Margin="100,255,0,0"
                                Header="Favorite Quotes" Interval="8"
                                Foreground="White" 
                                BorderBrush="DarkGray"
                                Grid.Row="1"
                                HorizontalAlignment="Left"
                                Background="{StaticResource AccentBrush}"
                                VerticalAlignment="Top" Loaded="favhubtile_Loaded"
                                x:Name="favhubtile" Tapped="favhubtile_Tapped"
                                IsFrozen="False">
                <syncfusion:SfHubTile.Title>
                    <TextBlock Text="{Binding ElementName=favoritetitle, Path=Text}" FontSize="18" TextWrapping="Wrap" x:Name="favoritetitle"/>
                </syncfusion:SfHubTile.Title>
                <syncfusion:SfHubTile.SecondaryContent>
                    <TextBlock Text="{Binding ElementName=favoriteseconarytitle, Path=Text}" FontSize="18" TextWrapping="Wrap" x:Name="favoriteseconarytitle" Margin="5,5,5,5" />
                </syncfusion:SfHubTile.SecondaryContent>
            </syncfusion:SfHubTile>
            <!--<Input:TextBoxExt Text="" x:Name="favoritetitle" Visibility="Collapsed"/>
            <Input:TextBoxExt Text="" x:Name="favoriteseconarytitle" Visibility="Collapsed"/>-->
            <!--<Button x:Name="btnRandomQuotes" Click="btnRandomQuotes_Click" Content="Random Quotes" Width="250" Visibility="Collapsed" Margin="10,-20"></Button>
            <Button x:Name="btnFavoriteQuotes" Click="btnFavoriteQuotes_Click" Content="Favorite Quotes" Width="250" Visibility="Collapsed" Margin="10,5,0,507" Height="40" Grid.Row="1"></Button>-->
            <!-- Horizontal scrolling grid used in most view states -->
            <GridView
            x:Name="itemGridView"
            AutomationProperties.AutomationId="ItemGridView"
            AutomationProperties.Name="Grouped Items"
            Grid.Row="0" Grid.RowSpan="2"  Grid.Column="1"
            Margin="10,-3,0,0"
            Padding="40,0,40,46" 
            ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
            ItemTemplate="{StaticResource Standard250x250ItemTemplateQuotes}"
            SelectionMode="None"
            IsItemClickEnabled="True"
            ItemClick="ItemView_ItemClick">

                <GridView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </GridView.ItemsPanel>
                <GridView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <Grid Margin="1,0,0,6">
                                    <Button
                                    AutomationProperties.Name="Group Title"
                                    Content="{Binding Title}"
                                    
                                    Style="{StaticResource TextButtonStyle}"/>
                                </Grid>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,80,0"/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>
                </GridView.GroupStyle>
            </GridView>

            <!-- Vertical scrolling list only used when snapped -->
            <ListView
            x:Name="itemListView"
            AutomationProperties.AutomationId="ItemListView"
            AutomationProperties.Name="Grouped Items"
            Grid.Row="0" Grid.RowSpan="2"
            Visibility="Collapsed"
            Margin="0,-10,0,0"
            Padding="10,0,0,60"
            ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
            ItemTemplate="{StaticResource Standard80ItemTemplateQuotes}"
            SelectionMode="None"
            IsItemClickEnabled="True"
            ItemClick="ItemView_ItemClick">

                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <Grid Margin="7,7,0,0">
                                    <Button
                                    AutomationProperties.Name="Group Title"
                                    Content="{Binding Title}"
                                    Click="Header_Click"
                                    Style="{StaticResource TextButtonStyle}"/>
                                </Grid>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>

            <VisualStateManager.VisualStateGroups>

                <!-- Visual states reflect the application's view state -->
                <VisualStateGroup x:Name="ApplicationViewStates">
                    <VisualState x:Name="FullScreenLandscape"/>
                    <VisualState x:Name="Filled"/>

                    <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                    <VisualState x:Name="FullScreenPortrait">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                            </ObjectAnimationUsingKeyFrames>

                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Padding">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="96,0,10,56"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>

                    <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                    <VisualState x:Name="Snapped">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                            </ObjectAnimationUsingKeyFrames>

                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hubtile" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="favhubtile" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="btnRandomQuotes" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            </ObjectAnimationUsingKeyFrames>

                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="btnFavoriteQuotes" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                            </ObjectAnimationUsingKeyFrames>

                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </Grid>    
    <Page.BottomAppBar>
        <AppBar Padding="10,0,10,0" IsSticky="true" IsOpen="True" Opacity="0.5">
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button IsEnabled="True" x:Name="btnAllCats" Style="{StaticResource AllCatsAppBarButtonStyle}" Click="btnAllCats_Click"></Button>
                    <Button IsEnabled="True" x:Name="btnAllAuthors" Style="{StaticResource AllAuthorsAppBarButtonStyle}" Click="btnAllAuthors_Click"></Button>
                </StackPanel>
            </Grid>
        </AppBar>
        </Page.BottomAppBar>
</common:LayoutAwarePage>
